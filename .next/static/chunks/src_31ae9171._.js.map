{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/live-incidents-service.ts"],"sourcesContent":["\n'use server';\n\nimport { formatDistanceToNow } from 'date-fns';\n\nexport interface LiveIncident {\n  id: string;\n  source: 'Web' | 'Social Media' | 'Official';\n  title: string;\n  summary: string;\n  url: string;\n  timestamp: string; // ISO string\n  timeAgo: string;\n  location: string;\n}\n\ninterface PerplexityResponseItem {\n    title: string;\n    summary: string;\n    source: 'Web' | 'Social Media' | 'Official';\n    url: string;\n    location: string;\n}\n\nexport async function getLiveIncidents(location: {\n  lat: number;\n  lng: number;\n  address: string;\n}): Promise<{ success: boolean; data?: LiveIncident[], error?: string }> {\n  const apiKey = process.env.PERPLEXITY_API_KEY;\n\n  if (!apiKey) {\n    return { success: false, error: 'Perplexity API key is not configured. Please add PERPLEXITY_API_KEY to your .env file.' };\n  }\n\n  const url = \"https://api.perplexity.ai/chat/completions\";\n\n  const systemPrompt = `You are an expert civic data aggregator. Your task is to find publicly reported incidents for a specified location that are happening today or are upcoming.\n    Focus ONLY on events that affect people's commute, such as: protests, fallen trees, water flooding, politician visits causing traffic changes, or other major public disturbances.\n    The user will provide a location. Your response must be ONLY a valid JSON object, with no other text, commentary, or explanation.\n    The JSON object must have a single key named \"incidents\", which contains an array of objects.\n    Each object in the array should have the following structure: { \"title\": string, \"summary\": string, \"url\": string, \"source\": \"Web\" | \"Social Media\" | \"Official\", \"location\": string }.\n    Do not return more than 5 incidents. If no relevant incidents are found, return an empty array for the \"incidents\" key.`;\n\n  const userPrompt = `Find the latest incidents for the following location: ${location.address}`;\n  \n  const payload = {\n    model: \"sonar\",\n    messages: [\n        { \"role\": \"system\", \"content\": systemPrompt },\n        { \"role\": \"user\", \"content\": userPrompt }\n    ],\n  };\n\n  const headers = {\n    \"Authorization\": `Bearer ${apiKey}`,\n    \"Content-Type\": \"application/json\"\n  };\n\n  try {\n    const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(payload),\n        headers: headers\n    });\n\n    const responseData = await response.json();\n\n    if (!response.ok) {\n        throw new Error(responseData.error?.message || 'Perplexity API request failed');\n    }\n    \n    let incidentsArray: PerplexityResponseItem[] = [];\n    const choice = responseData.choices[0];\n    if (choice && choice.message && choice.message.content) {\n        // Attempt to parse the content, which should be a JSON string\n        try {\n            const content = JSON.parse(choice.message.content);\n            if (content && Array.isArray(content.incidents)) {\n                incidentsArray = content.incidents;\n            } else {\n                // Handle cases where the JSON is valid but not in the expected { \"incidents\": [] } format\n                 console.warn(\"Parsed JSON from Perplexity does not have an 'incidents' key. Trying to find an array.\", content);\n                 const arrayKey = Object.keys(content).find(k => Array.isArray(content[k]));\n                 if (arrayKey) {\n                    incidentsArray = content[arrayKey];\n                 }\n            }\n        } catch (e) {\n            console.error(\"Failed to parse JSON from Perplexity response:\", choice.message.content, e);\n            throw new Error('Could not parse the response from the live incident service.');\n        }\n\n    } else {\n        throw new Error('Invalid response structure from Perplexity API.');\n    }\n\n    if (!Array.isArray(incidentsArray)) {\n        console.error(\"Perplexity API did not return an array:\", incidentsArray);\n        return { success: false, error: 'Invalid data format from live incident service.' };\n    }\n\n    const dataWithTimeAgo: LiveIncident[] = incidentsArray.map((incident, index) => ({\n        ...incident,\n        id: `live-${index}-${new Date().getTime()}`,\n        timestamp: new Date().toISOString(),\n        timeAgo: 'Just now',\n    }));\n\n    return { success: true, data: dataWithTimeAgo };\n\n  } catch (error: any) {\n    console.error(\"Error fetching live incidents:\", error);\n    return { success: false, error: error.message || \"An unknown error occurred.\" };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAwBsB,mBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/command.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\ninterface CommandDialogProps extends DialogProps {}\n\nconst CommandDialog = ({ children, ...props }: CommandDialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none aria-selected:bg-accent aria-selected:text-accent-foreground data-[disabled=true]:pointer-events-none data-[disabled=true]:opacity-50\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 573, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/places-service.ts"],"sourcesContent":["\n'use server';\n\nexport interface AutocompletePrediction {\n    placeId: string;\n    description: string;\n}\n\nexport interface PlaceDetails {\n    name: string;\n    address: string;\n    location: {\n        lat: number;\n        lng: number;\n    }\n}\n\nexport async function autocompletePlaces(\n  query: string,\n  location: { lat: number, lng: number } | null,\n  types: string[]\n): Promise<{ success: boolean; data?: AutocompletePrediction[], error?: string }> {\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n  if (!apiKey) {\n    return { success: false, error: \"Google Maps API key is not configured on the server.\" };\n  }\n  \n  const url = 'https://places.googleapis.com/v1/places:autocomplete';\n\n  const headers = {\n    'Content-Type': 'application/json',\n    'X-Goog-Api-Key': apiKey,\n  };\n\n  const body = JSON.stringify({\n    input: query,\n    includedPrimaryTypes: types,\n    ...(location && {\n        locationRestriction: {\n            circle: {\n                center: {\n                    latitude: location.lat,\n                    longitude: location.lng,\n                },\n                radius: 10000.0, // 10km radius bias\n            },\n        }\n    }),\n  });\n\n  try {\n    const response = await fetch(url, { method: 'POST', headers, body });\n    const data = await response.json();\n\n    if (data.error || !data.suggestions) {\n        return { success: false, error: `Places Autocomplete error: ${data.error?.message || 'No results'}` };\n    }\n\n    const predictions: AutocompletePrediction[] = data.suggestions.map((prediction: any) => ({\n      placeId: prediction.placePrediction.place,\n      description: prediction.placePrediction.text.text,\n    }));\n    \n    return { success: true, data: predictions };\n  } catch (e) {\n    console.error(\"Error fetching autocomplete places:\", e);\n    return { success: false, error: 'An unknown error occurred while fetching autocomplete results.' };\n  }\n}\n\nexport async function getPlaceDetails(placeId: string): Promise<{ success: boolean, data?: PlaceDetails, error?: string }> {\n     const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n    if (!apiKey) {\n        return { success: false, error: \"Google Maps API key is not configured on the server.\" };\n    }\n    \n    const url = `https://places.googleapis.com/v1/${placeId}`;\n    const headers = {\n        'Content-Type': 'application/json',\n        'X-Goog-Api-Key': apiKey,\n        'X-Goog-FieldMask': 'displayName,formattedAddress,location'\n    };\n    \n    try {\n        const response = await fetch(url, { headers });\n        const data = await response.json();\n        \n        if (data.error) {\n             return { success: false, error: `Place Details error: ${data.error?.message || 'Not found'}` };\n        }\n        \n        const details: PlaceDetails = {\n            name: data.displayName.text,\n            address: data.formattedAddress,\n            location: {\n                lat: data.location.latitude,\n                lng: data.location.longitude,\n            }\n        };\n        \n        return { success: true, data: details };\n    } catch(e) {\n        console.error(\"Error fetching place details:\", e);\n        return { success: false, error: 'An unknown error occurred while fetching place details.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;IAiBsB,qBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 589, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/places-service.ts"],"sourcesContent":["\n'use server';\n\nexport interface AutocompletePrediction {\n    placeId: string;\n    description: string;\n}\n\nexport interface PlaceDetails {\n    name: string;\n    address: string;\n    location: {\n        lat: number;\n        lng: number;\n    }\n}\n\nexport async function autocompletePlaces(\n  query: string,\n  location: { lat: number, lng: number } | null,\n  types: string[]\n): Promise<{ success: boolean; data?: AutocompletePrediction[], error?: string }> {\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n  if (!apiKey) {\n    return { success: false, error: \"Google Maps API key is not configured on the server.\" };\n  }\n  \n  const url = 'https://places.googleapis.com/v1/places:autocomplete';\n\n  const headers = {\n    'Content-Type': 'application/json',\n    'X-Goog-Api-Key': apiKey,\n  };\n\n  const body = JSON.stringify({\n    input: query,\n    includedPrimaryTypes: types,\n    ...(location && {\n        locationRestriction: {\n            circle: {\n                center: {\n                    latitude: location.lat,\n                    longitude: location.lng,\n                },\n                radius: 10000.0, // 10km radius bias\n            },\n        }\n    }),\n  });\n\n  try {\n    const response = await fetch(url, { method: 'POST', headers, body });\n    const data = await response.json();\n\n    if (data.error || !data.suggestions) {\n        return { success: false, error: `Places Autocomplete error: ${data.error?.message || 'No results'}` };\n    }\n\n    const predictions: AutocompletePrediction[] = data.suggestions.map((prediction: any) => ({\n      placeId: prediction.placePrediction.place,\n      description: prediction.placePrediction.text.text,\n    }));\n    \n    return { success: true, data: predictions };\n  } catch (e) {\n    console.error(\"Error fetching autocomplete places:\", e);\n    return { success: false, error: 'An unknown error occurred while fetching autocomplete results.' };\n  }\n}\n\nexport async function getPlaceDetails(placeId: string): Promise<{ success: boolean, data?: PlaceDetails, error?: string }> {\n     const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n    if (!apiKey) {\n        return { success: false, error: \"Google Maps API key is not configured on the server.\" };\n    }\n    \n    const url = `https://places.googleapis.com/v1/${placeId}`;\n    const headers = {\n        'Content-Type': 'application/json',\n        'X-Goog-Api-Key': apiKey,\n        'X-Goog-FieldMask': 'displayName,formattedAddress,location'\n    };\n    \n    try {\n        const response = await fetch(url, { headers });\n        const data = await response.json();\n        \n        if (data.error) {\n             return { success: false, error: `Place Details error: ${data.error?.message || 'Not found'}` };\n        }\n        \n        const details: PlaceDetails = {\n            name: data.displayName.text,\n            address: data.formattedAddress,\n            location: {\n                lat: data.location.latitude,\n                lng: data.location.longitude,\n            }\n        };\n        \n        return { success: true, data: details };\n    } catch(e) {\n        console.error(\"Error fetching place details:\", e);\n        return { success: false, error: 'An unknown error occurred while fetching place details.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;IAsEsB,kBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 605, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-debounce.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\n\n// A simple hook to debounce a value\nexport function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    // Set debouncedValue to value (passed in) after the specified delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    // Return a cleanup function that will be called every time ...\n    // ... useEffect is re-called. useEffect will only be re-called ...\n    // ... if value or delay changes (see the inputs array below). \n    // This is how we prevent debouncedValue from changing if value is ...\n    // ... changed within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]); // Only re-call effect if value or delay changes\n\n  return debouncedValue;\n}\n"],"names":[],"mappings":";;;AAAA;;;AAGO,SAAS,YAAe,KAAQ,EAAE,KAAa;;IACpD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAK;IAExD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,oEAAoE;YACpE,MAAM,UAAU;iDAAW;oBACzB,kBAAkB;gBACpB;gDAAG;YAEH,+DAA+D;YAC/D,mEAAmE;YACnE,+DAA+D;YAC/D,sEAAsE;YACtE,2EAA2E;YAC3E;yCAAO;oBACL,aAAa;gBACf;;QACF;gCAAG;QAAC;QAAO;KAAM,GAAG,gDAAgD;IAEpE,OAAO;AACT;GApBgB","debugId":null}},
    {"offset": {"line": 649, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/custom-map-pin.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { LucideProps } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface CustomMapPinProps {\n  icon: React.ElementType<LucideProps>;\n  className?: string;\n}\n\nexport function CustomMapPin({ icon: Icon, className }: CustomMapPinProps) {\n  return (\n    <div\n      className={cn(\n        'w-8 h-8 rounded-full bg-background border-2 border-foreground flex items-center justify-center shadow-md',\n        className\n      )}\n    >\n      <Icon className={cn('w-5 h-5 text-foreground', className)} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAIA;AAJA;;;AAWO,SAAS,aAAa,EAAE,MAAM,IAAI,EAAE,SAAS,EAAqB;IACvE,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4GACA;kBAGF,cAAA,6LAAC;YAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2BAA2B;;;;;;;;;;;AAGrD;KAXgB","debugId":null}},
    {"offset": {"line": 685, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/map.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useMemo, useEffect, useCallback, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, OverlayView, TrafficLayer, Polyline } from '@react-google-maps/api';\nimport { CustomMapPin } from './custom-map-pin';\nimport { Droplets, Car, PowerOff, AlertTriangle, Construction, TreeDeciduous, TrafficCone, Home, School } from 'lucide-react';\nimport { Incident } from '@/lib/types';\n\nconst defaultContainerStyle = {\n  width: '100%',\n  height: '100%',\n  borderRadius: '0.5rem',\n};\n\nconst defaultCenter = {\n  lat: 37.7749,\n  lng: -122.4194,\n};\n\nconst getPixelPositionOffset = (width: number, height: number) => ({\n  x: -(width / 2),\n  y: -(height / 2),\n});\n\nconst categoryStyles: { [key: string]: { icon: React.ElementType; className: string } } = {\n    'Water Logging': { icon: Droplets, className: 'bg-blue-100 border-blue-500 text-blue-500' },\n    'Road Accidents': { icon: Car, className: 'bg-red-100 border-red-500 text-red-500' },\n    'Accident': { icon: Car, className: 'bg-red-100 border-red-500 text-red-500' },\n    'Fire Accidents': { icon: TrafficCone, className: 'bg-orange-100 border-orange-500 text-orange-500' },\n    'Electrical Issues': { icon: PowerOff, className: 'bg-yellow-100 border-yellow-500 text-yellow-500' },\n    'PowerCut': { icon: PowerOff, className: 'bg-yellow-100 border-yellow-500 text-yellow-500' },\n    'Drainage/Fallen Tree': { icon: TreeDeciduous, className: 'bg-green-100 border-green-500 text-green-500' },\n    'Road Blockages': { icon: TrafficCone, className: 'bg-gray-100 border-gray-500 text-gray-500' },\n    'Construction Zones': { icon: Construction, className: 'bg-indigo-100 border-indigo-500 text-indigo-500' },\n    'Home': { icon: Home, className: 'bg-green-100 border-green-500 text-green-500' },\n    'School': { icon: School, className: 'bg-blue-100 border-blue-500 text-blue-500' },\n    'Other': { icon: AlertTriangle, className: 'bg-purple-100 border-purple-500 text-purple-500' },\n};\n\ninterface MapComponentProps {\n  incidents: Incident[];\n  onPinClick: (incident: Incident) => void;\n  onMapClick?: (e: google.maps.MapMouseEvent) => void;\n  onMapLoad?: (isLoaded: boolean) => void;\n  center?: { lat: number; lng: number };\n  zoom?: number;\n  containerStyle?: React.CSSProperties;\n  showTraffic?: boolean;\n  routePolyline?: string;\n  aqiHeatmap?: boolean;\n}\n\nexport function MapComponent({ \n  incidents,\n  onPinClick,\n  onMapClick,\n  onMapLoad,\n  center = defaultCenter,\n  zoom = 12,\n  containerStyle = defaultContainerStyle,\n  showTraffic = false,\n  routePolyline,\n  aqiHeatmap = false\n}: MapComponentProps) {\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n  const [mapInstance, setMapInstance] = useState<google.maps.Map | null>(null);\n\n  const { isLoaded, loadError } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: apiKey || '',\n    libraries: ['places', 'routes', 'geometry'],\n  });\n\n  const handleMapLoad = useCallback((map: google.maps.Map) => {\n    setMapInstance(map);\n    if (onMapLoad) {\n      onMapLoad(true);\n    }\n  }, [onMapLoad]);\n  \n  useEffect(() => {\n    if(onMapLoad) onMapLoad(isLoaded);\n  }, [isLoaded, onMapLoad]);\n  \n  const decodedPath = useMemo(() => {\n    if (isLoaded && routePolyline && window.google?.maps?.geometry?.encoding) {\n        return window.google.maps.geometry.encoding.decodePath(routePolyline);\n    }\n    return [];\n  }, [isLoaded, routePolyline]);\n\n  useEffect(() => {\n    if (mapInstance && isLoaded) {\n      // Always clear existing overlays before adding new ones\n      mapInstance.overlayMapTypes.clear();\n\n      if (aqiHeatmap) {\n        const aqiTileLayer = new google.maps.ImageMapType({\n          getTileUrl: function(coord, zoom) {\n            const url = `https://airquality.googleapis.com/v1/mapTypes/UAQI_RED_GREEN/heatmapTiles/${zoom}/${coord.x}/${coord.y}?key=${apiKey}`;\n            return url;\n          },\n          tileSize: new google.maps.Size(256, 256),\n          name: 'AQI Heatmap'\n        });\n        mapInstance.overlayMapTypes.insertAt(0, aqiTileLayer);\n      }\n    }\n     // Cleanup function to run when component unmounts or dependencies change\n    return () => {\n      if (mapInstance) {\n        mapInstance.overlayMapTypes.clear();\n      }\n    };\n  }, [mapInstance, isLoaded, aqiHeatmap, apiKey]);\n\n\n  if (loadError) {\n    return (\n      <div className=\"flex items-center justify-center h-full bg-muted rounded-lg\">\n        <p className=\"text-destructive\">\n          Error loading maps.\n        </p>\n      </div>\n    );\n  }\n\n  if (!isLoaded) {\n    return (\n       <div className=\"flex items-center justify-center h-full bg-muted rounded-lg\">\n        <p>Loading Map...</p>\n      </div>\n    );\n  }\n\n  if (!apiKey) {\n    return (\n      <div className=\"flex items-center justify-center h-full bg-muted rounded-lg\">\n        <p className=\"text-destructive\">\n          Google Maps API key is missing. Please add it to your .env file.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={zoom} onClick={onMapClick} onLoad={handleMapLoad}>\n      {incidents.map(incident => {\n          const style = categoryStyles[incident.category] || categoryStyles['Other'];\n          if (!style) return null;\n          return (\n            <OverlayView\n              key={incident.id}\n              position={{ lat: incident.location.latitude, lng: incident.location.longitude }}\n              mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n              getPixelPositionOffset={getPixelPositionOffset}\n            >\n              <div onClick={() => onPinClick(incident)} style={{cursor: 'pointer'}}>\n                <CustomMapPin icon={style.icon} className={style.className} />\n              </div>\n            </OverlayView>\n          )\n      })}\n      {showTraffic && <TrafficLayer autoUpdate />}\n      {decodedPath.length > 0 && (\n        <Polyline\n            path={decodedPath}\n            options={{\n                strokeColor: '#FF0000',\n                strokeOpacity: 0.8,\n                strokeWeight: 4,\n            }}\n        />\n      )}\n    </GoogleMap>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 968, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/live-agent/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { useToast } from '@/hooks/use-toast';\nimport { Bot, LoaderCircle, MapPin, Search, Globe, Twitter, Newspaper, Link as LinkIcon, AlertTriangle } from 'lucide-react';\nimport { getLiveIncidents, LiveIncident } from '@/lib/live-incidents-service';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Command, CommandEmpty, CommandGroup, CommandInput, CommandItem, CommandList } from '@/components/ui/command';\nimport { autocompletePlaces, getPlaceDetails } from '@/lib/places-service';\nimport { useDebounce } from '@/hooks/use-debounce';\nimport { MapComponent } from '@/components/map';\nimport { Incident } from '@/lib/types';\n\n\ntype LocationState = {\n  lat: number;\n  lng: number;\n  address: string;\n} | null;\n\nconst SourceIcon = ({ source }: { source: LiveIncident['source'] }) => {\n  switch (source) {\n    case 'Web': return <Newspaper className=\"w-4 h-4 text-blue-500\" />;\n    case 'Social Media': return <Twitter className=\"w-4 h-4 text-sky-500\" />;\n    case 'Official': return <Globe className=\"w-4 h-4 text-green-500\" />;\n    default: return <LinkIcon className=\"w-4 h-4\" />;\n  }\n};\n\nexport default function LiveAgentPage() {\n  const [location, setLocation] = useState<LocationState>(null);\n  const [incidents, setIncidents] = useState<LiveIncident[]>([]);\n  const [isLocating, setIsLocating] = useState(true);\n  const [isFetchingIncidents, setIsFetchingIncidents] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [autocompleteResults, setAutocompleteResults] = useState<{ description: string; placeId: string }[]>([]);\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [apiKeyMissing, setApiKeyMissing] = useState(false);\n  \n  const debouncedSearchQuery = useDebounce(searchQuery, 300);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    if (!isMapLoaded) return;\n\n    navigator.geolocation.getCurrentPosition(\n      async (position) => {\n        const { latitude, longitude } = position.coords;\n        const geocoder = new google.maps.Geocoder();\n        const response = await geocoder.geocode({ location: { lat: latitude, lng: longitude } });\n        const address = response.results[0]?.formatted_address || 'Current Location';\n        setLocation({ lat: latitude, lng: longitude, address });\n        setIsLocating(false);\n      },\n      (error) => {\n        console.error(\"Error getting location:\", error);\n        toast({ variant: 'destructive', title: 'Could not get your location.' });\n        // Fallback location\n        setLocation({ lat: 37.7749, lng: -122.4194, address: 'San Francisco, CA, USA' });\n        setIsLocating(false);\n      }\n    );\n  }, [toast, isMapLoaded]);\n\n  useEffect(() => {\n    if (location) {\n      const fetchIncidents = async () => {\n        setIsFetchingIncidents(true);\n        const result = await getLiveIncidents(location);\n        if (result.success && result.data) {\n          setIncidents(result.data);\n          setApiKeyMissing(false);\n        } else {\n          if (result.error?.includes('API key')) {\n              setApiKeyMissing(true);\n          }\n          toast({ variant: 'destructive', title: 'Failed to fetch live incidents.', description: result.error });\n          setIncidents([]); // Clear incidents on error\n        }\n        setIsFetchingIncidents(false);\n      };\n      fetchIncidents();\n    }\n  }, [location, toast]);\n\n  useEffect(() => {\n    if (debouncedSearchQuery.length > 2) {\n      const fetchAutocomplete = async () => {\n        const result = await autocompletePlaces(debouncedSearchQuery, null, ['(regions)']);\n        if (result.success && result.data) {\n          setAutocompleteResults(result.data);\n        }\n      };\n      fetchAutocomplete();\n    } else {\n      setAutocompleteResults([]);\n    }\n  }, [debouncedSearchQuery]);\n  \n  const handleSelectLocation = async (placeId: string, description: string) => {\n    const result = await getPlaceDetails(placeId);\n    if (result.success && result.data) {\n        setLocation({\n            lat: result.data.location.lat,\n            lng: result.data.location.lng,\n            address: result.data.address\n        });\n        setSearchQuery(result.data.address);\n        setIsPopoverOpen(false);\n    } else {\n        toast({ variant: 'destructive', title: 'Could not fetch location details.' });\n    }\n  };\n  \n  const mapPins = useMemo(() => {\n    if (!location) return [];\n    return [{\n        id: 'search-location',\n        location: { latitude: location.lat, longitude: location.lng },\n        category: 'Home',\n        severity: 'Low',\n        summary: location.address,\n        timestamp: new Date().toISOString()\n    }] as Incident[];\n  }, [location]);\n\n\n  return (\n    <div className=\"bg-background min-h-screen\">\n      <main className=\"container mx-auto px-4 py-8 md:py-16\">\n        <header className=\"text-center mb-8\">\n          <h1 className=\"text-4xl sm:text-5xl font-bold font-headline text-primary flex items-center justify-center gap-3\">\n            <Bot className=\"w-12 h-12\" /> Live Agent\n          </h1>\n          <p className=\"mt-4 text-lg text-muted-foreground\">\n            Real-time incident updates from across the web for your selected area.\n          </p>\n        </header>\n\n        <div className=\"max-w-4xl mx-auto mb-8 grid grid-cols-1 md:grid-cols-2 gap-8\">\n            <div className=\"space-y-4\">\n                <Card>\n                    <CardContent className='p-4'>\n                        <div className=\"flex items-center gap-3\">\n                            <MapPin className=\"w-5 h-5 text-primary\" />\n                            <Popover open={isPopoverOpen} onOpenChange={setIsPopoverOpen}>\n                                <PopoverTrigger asChild>\n                                    <div className='relative w-full'>\n                                        <Input\n                                            placeholder=\"Search for a city or region...\"\n                                            value={searchQuery || location?.address || ''}\n                                            onChange={(e) => setSearchQuery(e.target.value)}\n                                            className=\"pr-10\"\n                                            disabled={!isMapLoaded}\n                                        />\n                                        <Search className=\"absolute right-3 top-1/2 -translate-y-1/2 w-5 h-5 text-muted-foreground\" />\n                                    </div>\n                                </PopoverTrigger>\n                                <PopoverContent className=\"w-[--radix-popover-trigger-width] p-0\" align=\"start\">\n                                    <Command shouldFilter={false}>\n                                        <CommandInput placeholder=\"Type to search...\" value={searchQuery} onValueChange={setSearchQuery}/>\n                                        <CommandList>\n                                            <CommandEmpty>No results found.</CommandEmpty>\n                                            <CommandGroup>\n                                            {autocompleteResults.map((result) => (\n                                                <CommandItem\n                                                    key={result.placeId}\n                                                    onSelect={() => handleSelectLocation(result.placeId, result.description)}\n                                                    value={result.description}\n                                                >\n                                                    {result.description}\n                                                </CommandItem>\n                                            ))}\n                                            </CommandGroup>\n                                        </CommandList>\n                                    </Command>\n                                </PopoverContent>\n                            </Popover>\n                        </div>\n                    </CardContent>\n                </Card>\n                 <div className=\"space-y-6 max-h-[500px] overflow-y-auto pr-2\">\n                    {isLocating || isFetchingIncidents ? (\n                    <div className=\"flex justify-center items-center gap-2 text-muted-foreground text-lg py-16\">\n                        <LoaderCircle className=\"w-6 h-6 animate-spin\" />\n                        <p>{isLocating ? \"Getting current location...\" : \"Fetching latest incidents from Perplexity...\"}</p>\n                    </div>\n                    ) : apiKeyMissing ? (\n                         <Card className=\"border-destructive\">\n                            <CardHeader className='flex-row items-center gap-4 space-y-0'>\n                                <AlertTriangle className=\"w-8 h-8 text-destructive\" />\n                                <div>\n                                    <CardTitle>API Key Missing</CardTitle>\n                                    <CardDescription>\n                                        The Perplexity API key is not configured. Please add it to your .env file.\n                                    </CardDescription>\n                                </div>\n                            </CardHeader>\n                        </Card>\n                    ) : incidents.length > 0 ? (\n                    incidents.map((incident) => (\n                        <Card key={incident.id} className=\"shadow-md hover:shadow-lg transition-shadow\">\n                        <CardHeader>\n                            <div className=\"flex justify-between items-start\">\n                                <CardTitle className=\"font-headline text-xl flex items-center gap-3\">\n                                    {incident.title}\n                                </CardTitle>\n                                <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                                    <SourceIcon source={incident.source} />\n                                    <span>{incident.source}</span>\n                                </div>\n                            </div>\n                            <CardDescription>{incident.timeAgo} &bull; {incident.location}</CardDescription>\n                        </CardHeader>\n                        <CardContent>\n                            <p className=\"text-muted-foreground\">{incident.summary}</p>\n                            <Button variant=\"link\" asChild className=\"p-0 h-auto mt-2\">\n                                <a href={incident.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    View Source <LinkIcon className=\"w-4 h-4 ml-2\" />\n                                </a>\n                            </Button>\n                        </CardContent>\n                        </Card>\n                    ))\n                    ) : (\n                    <Card>\n                        <CardContent className=\"p-8 text-center\">\n                        <p className=\"text-muted-foreground\">No live incidents found for the selected area.</p>\n                        </CardContent>\n                    </Card>\n                    )}\n                </div>\n            </div>\n            <div className=\"h-[400px] md:h-[600px] rounded-lg overflow-hidden\">\n                <MapComponent\n                    incidents={mapPins}\n                    onPinClick={() => {}}\n                    onMapLoad={setIsMapLoaded}\n                    center={location ? { lat: location.lat, lng: location.lng } : undefined}\n                    zoom={location ? 11 : 9}\n                />\n            </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}