{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/custom-map-pin.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { LucideProps } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface CustomMapPinProps {\n  icon: React.ElementType<LucideProps>;\n  className?: string;\n}\n\nexport function CustomMapPin({ icon: Icon, className }: CustomMapPinProps) {\n  return (\n    <div\n      className={cn(\n        'w-8 h-8 rounded-full bg-background border-2 border-foreground flex items-center justify-center shadow-md',\n        className\n      )}\n    >\n      <Icon className={cn('w-5 h-5 text-foreground', className)} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAIA;AAJA;;;AAWO,SAAS,aAAa,EAAE,MAAM,IAAI,EAAE,SAAS,EAAqB;IACvE,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4GACA;kBAGF,cAAA,6LAAC;YAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2BAA2B;;;;;;;;;;;AAGrD;KAXgB","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/map.tsx"],"sourcesContent":["'use client';\n\nimport React, { useMemo } from 'react';\nimport { GoogleMap, useJsApiLoader, OverlayView, TrafficLayer, Polyline } from '@react-google-maps/api';\nimport { CustomMapPin } from './custom-map-pin';\nimport { Droplets, Car, PowerOff, AlertTriangle, Construction, TreeDeciduous, TrafficCone, Home, School } from 'lucide-react';\nimport { Incident } from '@/lib/types';\n\nconst defaultContainerStyle = {\n  width: '100%',\n  height: '100%',\n  borderRadius: '0.5rem',\n};\n\nconst defaultCenter = {\n  lat: 37.7749,\n  lng: -122.4194,\n};\n\nconst getPixelPositionOffset = (width: number, height: number) => ({\n  x: -(width / 2),\n  y: -(height / 2),\n});\n\nconst categoryStyles: { [key: string]: { icon: React.ElementType; className: string } } = {\n    'Water Logging': { icon: Droplets, className: 'bg-blue-100 border-blue-500 text-blue-500' },\n    'Road Accidents': { icon: Car, className: 'bg-red-100 border-red-500 text-red-500' },\n    'Accident': { icon: Car, className: 'bg-red-100 border-red-500 text-red-500' },\n    'Fire Accidents': { icon: TrafficCone, className: 'bg-orange-100 border-orange-500 text-orange-500' },\n    'Electrical Issues': { icon: PowerOff, className: 'bg-yellow-100 border-yellow-500 text-yellow-500' },\n    'PowerCut': { icon: PowerOff, className: 'bg-yellow-100 border-yellow-500 text-yellow-500' },\n    'Drainage/Fallen Tree': { icon: TreeDeciduous, className: 'bg-green-100 border-green-500 text-green-500' },\n    'Road Blockages': { icon: TrafficCone, className: 'bg-gray-100 border-gray-500 text-gray-500' },\n    'Construction Zones': { icon: Construction, className: 'bg-indigo-100 border-indigo-500 text-indigo-500' },\n    'Home': { icon: Home, className: 'bg-green-100 border-green-500 text-green-500' },\n    'School': { icon: School, className: 'bg-blue-100 border-blue-500 text-blue-500' },\n    'Other': { icon: AlertTriangle, className: 'bg-purple-100 border-purple-500 text-purple-500' },\n};\n\ninterface MapComponentProps {\n  incidents: Incident[];\n  onPinClick: (incident: Incident) => void;\n  center?: { lat: number; lng: number };\n  zoom?: number;\n  containerStyle?: React.CSSProperties;\n  showTraffic?: boolean;\n  routePolyline?: string;\n}\n\nexport function MapComponent({ \n  incidents,\n  onPinClick,\n  center = defaultCenter,\n  zoom = 12,\n  containerStyle = defaultContainerStyle,\n  showTraffic = false,\n  routePolyline\n}: MapComponentProps) {\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n\n  const { isLoaded, loadError } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: apiKey || '',\n    libraries: ['places', 'routes', 'geometry'],\n  });\n  \n  const decodedPath = useMemo(() => {\n    if (isLoaded && routePolyline && window.google?.maps?.geometry?.encoding) {\n        return window.google.maps.geometry.encoding.decodePath(routePolyline);\n    }\n    return [];\n  }, [isLoaded, routePolyline]);\n\n  if (loadError) {\n    return (\n      <div className=\"flex items-center justify-center h-full bg-muted rounded-lg\">\n        <p className=\"text-destructive\">\n          Error loading maps.\n        </p>\n      </div>\n    );\n  }\n\n  if (!isLoaded) {\n    return (\n       <div className=\"flex items-center justify-center h-full bg-muted rounded-lg\">\n        <p>Loading Map...</p>\n      </div>\n    );\n  }\n\n  if (!apiKey) {\n    return (\n      <div className=\"flex items-center justify-center h-full bg-muted rounded-lg\">\n        <p className=\"text-destructive\">\n          Google Maps API key is missing. Please add it to your .env file.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={zoom}>\n      {incidents.map(incident => {\n          const style = categoryStyles[incident.category] || categoryStyles['Other'];\n          if (!style) return null;\n          return (\n            <OverlayView\n              key={incident.id}\n              position={{ lat: incident.location.latitude, lng: incident.location.longitude }}\n              mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n              getPixelPositionOffset={getPixelPositionOffset}\n            >\n              <div onClick={() => onPinClick(incident)} style={{cursor: 'pointer'}}>\n                <CustomMapPin icon={style.icon} className={style.className} />\n              </div>\n            </OverlayView>\n          )\n      })}\n      {showTraffic && <TrafficLayer autoUpdate />}\n      {decodedPath.length > 0 && (\n        <Polyline\n            path={decodedPath}\n            options={{\n                strokeColor: '#FF0000',\n                strokeOpacity: 0.8,\n                strokeWeight: 4,\n            }}\n        />\n      )}\n    </GoogleMap>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/places-service.ts"],"sourcesContent":["\n'use server';\n\ninterface SchoolResult {\n    id: string;\n    displayName: {\n        text: string;\n    },\n    formattedAddress: string;\n    location: {\n        latitude: number;\n        longitude: number;\n    }\n}\n\ninterface AutocompletePrediction {\n    place: string;\n    placeId: string;\n    text: {\n        text: string;\n        matches: {\n            startOffset: number;\n            endOffset: number;\n        }[];\n    };\n}\n\ninterface PlaceDetails {\n    name: string;\n    address: string;\n    location: {\n        lat: number;\n        lng: number;\n    }\n}\n\nexport async function autocompletePlaces(\n  query: string,\n  location: { lat: number, lng: number } | null,\n  types: string[]\n): Promise<{ success: boolean; data?: any[], error?: string }> {\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n  if (!apiKey) {\n    return { success: false, error: \"Google Maps API key is not configured on the server.\" };\n  }\n  \n  const url = 'https://places.googleapis.com/v1/places:autocomplete';\n\n  const headers = {\n    'Content-Type': 'application/json',\n    'X-Goog-Api-Key': apiKey,\n  };\n\n  const body = JSON.stringify({\n    input: query,\n    includedPrimaryTypes: types,\n    ...(location && {\n        locationBias: {\n            circle: {\n                center: {\n                    latitude: location.lat,\n                    longitude: location.lng,\n                },\n                radius: 10000.0, // 10km radius bias\n            },\n        }\n    }),\n  });\n\n  try {\n    const response = await fetch(url, { method: 'POST', headers, body });\n    const data = await response.json();\n\n    if (data.error || !data.suggestions) {\n        return { success: false, error: `Places Autocomplete error: ${data.error?.message || 'No results'}` };\n    }\n\n    const predictions = data.suggestions.map((prediction: AutocompletePrediction) => ({\n      placeId: prediction.placeId,\n      description: prediction.text.text,\n    }));\n    \n    return { success: true, data: predictions };\n  } catch (e) {\n    console.error(\"Error fetching autocomplete places:\", e);\n    return { success: false, error: 'An unknown error occurred while fetching autocomplete results.' };\n  }\n}\n\nexport async function getPlaceDetails(placeId: string): Promise<{ success: boolean, data?: PlaceDetails, error?: string }> {\n     const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n    if (!apiKey) {\n        return { success: false, error: \"Google Maps API key is not configured on the server.\" };\n    }\n    \n    const url = `https://places.googleapis.com/v1/places/${placeId}`;\n    const headers = {\n        'Content-Type': 'application/json',\n        'X-Goog-Api-Key': apiKey,\n        'X-Goog-FieldMask': 'displayName,formattedAddress,location'\n    };\n    \n    try {\n        const response = await fetch(url, { headers });\n        const data = await response.json();\n        \n        if (data.error) {\n             return { success: false, error: `Place Details error: ${data.error?.message || 'Not found'}` };\n        }\n        \n        const details: PlaceDetails = {\n            name: data.displayName.text,\n            address: data.formattedAddress,\n            location: {\n                lat: data.location.latitude,\n                lng: data.location.longitude,\n            }\n        };\n        \n        return { success: true, data: details };\n    } catch(e) {\n        console.error(\"Error fetching place details:\", e);\n        return { success: false, error: 'An unknown error occurred while fetching place details.' };\n    }\n}\n\n\nexport async function findNearbySchools(\n  location: { lat: number, lng: number }\n): Promise<{ success: boolean; data?: any[], error?: string }> {\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n  if (!apiKey) {\n    return { success: false, error: \"Google Maps API key is not configured on the server.\" };\n  }\n  \n  const url = 'https://places.googleapis.com/v1/places:searchNearby';\n\n  const headers = {\n    'Content-Type': 'application/json',\n    'X-Goog-Api-Key': apiKey,\n    'X-Goog-FieldMask': 'places.id,places.displayName,places.formattedAddress,places.location',\n  };\n\n  const body = JSON.stringify({\n    includedTypes: [\"school\", \"primary_school\", \"secondary_school\"],\n    maxResultCount: 10,\n    locationRestriction: {\n      circle: {\n        center: {\n          latitude: inlocation.lat,\n          longitude: inlocation.lng,\n        },\n        radius: 5000.0, // 5km radius\n      },\n    },\n  });\n\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers,\n      body,\n    });\n    \n    const data = await response.json();\n\n    if (data.error || !data.places) {\n        return { success: false, error: `Places API error: ${data.error?.message || 'No results'}` };\n    }\n\n    const schools = data.places.map((school: SchoolResult) => ({\n      place_id: school.id,\n      name: school.displayName.text,\n      vicinity: school.formattedAddress,\n      location: {\n        lat: school.location.latitude,\n        lng: school.location.longitude,\n      }\n    }));\n\n    return { success: true, data: schools };\n  } catch (e) {\n    console.error(\"Error fetching nearby schools:\", e);\n    return { success: false, error: 'An unknown error occurred while fetching schools.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAyFsB,kBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/directions-service.ts"],"sourcesContent":["\n'use server';\n\nexport interface DirectionDetails {\n    distance: string;\n    duration: string;\n    durationInTraffic: string;\n    summary: string;\n    polyline: string;\n    trafficStatus: 'light' | 'moderate' | 'heavy';\n}\n\nfunction getTrafficStatus(duration: number, durationInTraffic: number): 'light' | 'moderate' | 'heavy' {\n    const ratio = durationInTraffic / duration;\n    if (ratio < 1.2) return 'light';\n    if (ratio < 1.6) return 'moderate';\n    return 'heavy';\n}\n\nexport async function getDirections(\n  origin: { lat: number; lng: number },\n  destination: { lat: number; lng: number }\n): Promise<{ success: boolean; data?: DirectionDetails, error?: string; }> {\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n  if (!apiKey) {\n    return { success: false, error: \"Google Maps API key is not configured on the server.\" };\n  }\n\n  const url = new URL('https://maps.googleapis.com/maps/api/directions/json');\n  url.searchParams.append('origin', `${origin.lat},${origin.lng}`);\n  url.searchParams.append('destination', `${destination.lat},${destination.lng}`);\n  url.searchParams.append('key', apiKey);\n  url.searchParams.append('departure_time', 'now');\n\n  try {\n    const response = await fetch(url.toString());\n    const data = await response.json();\n\n    if (data.status !== 'OK' || !data.routes || data.routes.length === 0) {\n      return { success: false, error: `Directions API error: ${data.status} - ${data.error_message || 'No routes found.'}` };\n    }\n\n    const route = data.routes[0];\n    const leg = route.legs[0];\n    \n    if (!leg.distance || !leg.duration || !leg.duration_in_traffic) {\n        return { success: false, error: 'Directions response missing required fields.'}\n    }\n    \n    const trafficStatus = getTrafficStatus(leg.duration.value, leg.duration_in_traffic.value);\n\n    const details: DirectionDetails = {\n      distance: leg.distance.text,\n      duration: leg.duration.text,\n      durationInTraffic: leg.duration_in_traffic.text,\n      summary: route.summary,\n      polyline: route.overview_polyline.points,\n      trafficStatus,\n    };\n\n    return { success: true, data: details };\n  } catch (e) {\n    console.error(\"Error fetching directions:\", e);\n    return { success: false, error: 'An unknown error occurred while fetching directions.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAmBsB,gBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 454, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 653, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/command.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\ninterface CommandDialogProps extends DialogProps {}\n\nconst CommandDialog = ({ children, ...props }: CommandDialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none aria-selected:bg-accent aria-selected:text-accent-foreground data-[disabled=true]:pointer-events-none data-[disabled=true]:opacity-50\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 834, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/places-service.ts"],"sourcesContent":["\n'use server';\n\ninterface SchoolResult {\n    id: string;\n    displayName: {\n        text: string;\n    },\n    formattedAddress: string;\n    location: {\n        latitude: number;\n        longitude: number;\n    }\n}\n\ninterface AutocompletePrediction {\n    place: string;\n    placeId: string;\n    text: {\n        text: string;\n        matches: {\n            startOffset: number;\n            endOffset: number;\n        }[];\n    };\n}\n\ninterface PlaceDetails {\n    name: string;\n    address: string;\n    location: {\n        lat: number;\n        lng: number;\n    }\n}\n\nexport async function autocompletePlaces(\n  query: string,\n  location: { lat: number, lng: number } | null,\n  types: string[]\n): Promise<{ success: boolean; data?: any[], error?: string }> {\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n  if (!apiKey) {\n    return { success: false, error: \"Google Maps API key is not configured on the server.\" };\n  }\n  \n  const url = 'https://places.googleapis.com/v1/places:autocomplete';\n\n  const headers = {\n    'Content-Type': 'application/json',\n    'X-Goog-Api-Key': apiKey,\n  };\n\n  const body = JSON.stringify({\n    input: query,\n    includedPrimaryTypes: types,\n    ...(location && {\n        locationBias: {\n            circle: {\n                center: {\n                    latitude: location.lat,\n                    longitude: location.lng,\n                },\n                radius: 10000.0, // 10km radius bias\n            },\n        }\n    }),\n  });\n\n  try {\n    const response = await fetch(url, { method: 'POST', headers, body });\n    const data = await response.json();\n\n    if (data.error || !data.suggestions) {\n        return { success: false, error: `Places Autocomplete error: ${data.error?.message || 'No results'}` };\n    }\n\n    const predictions = data.suggestions.map((prediction: AutocompletePrediction) => ({\n      placeId: prediction.placeId,\n      description: prediction.text.text,\n    }));\n    \n    return { success: true, data: predictions };\n  } catch (e) {\n    console.error(\"Error fetching autocomplete places:\", e);\n    return { success: false, error: 'An unknown error occurred while fetching autocomplete results.' };\n  }\n}\n\nexport async function getPlaceDetails(placeId: string): Promise<{ success: boolean, data?: PlaceDetails, error?: string }> {\n     const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n    if (!apiKey) {\n        return { success: false, error: \"Google Maps API key is not configured on the server.\" };\n    }\n    \n    const url = `https://places.googleapis.com/v1/places/${placeId}`;\n    const headers = {\n        'Content-Type': 'application/json',\n        'X-Goog-Api-Key': apiKey,\n        'X-Goog-FieldMask': 'displayName,formattedAddress,location'\n    };\n    \n    try {\n        const response = await fetch(url, { headers });\n        const data = await response.json();\n        \n        if (data.error) {\n             return { success: false, error: `Place Details error: ${data.error?.message || 'Not found'}` };\n        }\n        \n        const details: PlaceDetails = {\n            name: data.displayName.text,\n            address: data.formattedAddress,\n            location: {\n                lat: data.location.latitude,\n                lng: data.location.longitude,\n            }\n        };\n        \n        return { success: true, data: details };\n    } catch(e) {\n        console.error(\"Error fetching place details:\", e);\n        return { success: false, error: 'An unknown error occurred while fetching place details.' };\n    }\n}\n\n\nexport async function findNearbySchools(\n  location: { lat: number, lng: number }\n): Promise<{ success: boolean; data?: any[], error?: string }> {\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n  if (!apiKey) {\n    return { success: false, error: \"Google Maps API key is not configured on the server.\" };\n  }\n  \n  const url = 'https://places.googleapis.com/v1/places:searchNearby';\n\n  const headers = {\n    'Content-Type': 'application/json',\n    'X-Goog-Api-Key': apiKey,\n    'X-Goog-FieldMask': 'places.id,places.displayName,places.formattedAddress,places.location',\n  };\n\n  const body = JSON.stringify({\n    includedTypes: [\"school\", \"primary_school\", \"secondary_school\"],\n    maxResultCount: 10,\n    locationRestriction: {\n      circle: {\n        center: {\n          latitude: inlocation.lat,\n          longitude: inlocation.lng,\n        },\n        radius: 5000.0, // 5km radius\n      },\n    },\n  });\n\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers,\n      body,\n    });\n    \n    const data = await response.json();\n\n    if (data.error || !data.places) {\n        return { success: false, error: `Places API error: ${data.error?.message || 'No results'}` };\n    }\n\n    const schools = data.places.map((school: SchoolResult) => ({\n      place_id: school.id,\n      name: school.displayName.text,\n      vicinity: school.formattedAddress,\n      location: {\n        lat: school.location.latitude,\n        lng: school.location.longitude,\n      }\n    }));\n\n    return { success: true, data: schools };\n  } catch (e) {\n    console.error(\"Error fetching nearby schools:\", e);\n    return { success: false, error: 'An unknown error occurred while fetching schools.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAoCsB,qBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 850, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/place-autocomplete.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Button } from '@/components/ui/button';\nimport { Command, CommandEmpty, CommandGroup, CommandInput, CommandItem, CommandList } from '@/components/ui/command';\nimport { Check, ChevronsUpDown, LoaderCircle } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { autocompletePlaces } from '@/lib/places-service';\nimport debounce from 'lodash.debounce';\n\ninterface PlaceAutocompleteProps {\n  onPlaceSelect: (placeId: string, description: string) => void;\n  location: { lat: number; lng: number } | null;\n  types: string[];\n}\n\ninterface Suggestion {\n  placeId: string;\n  description: string;\n}\n\nexport function PlaceAutocomplete({ onPlaceSelect, location, types }: PlaceAutocompleteProps) {\n  const [open, setOpen] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('');\n\n  const fetchSuggestions = useCallback(\n    debounce(async (query: string) => {\n      if (query.length < 3) {\n        setSuggestions([]);\n        return;\n      }\n      setIsLoading(true);\n      const result = await autocompletePlaces(query, location, types);\n      if (result.success && result.data) {\n        setSuggestions(result.data);\n      } else {\n        setSuggestions([]);\n      }\n      setIsLoading(false);\n    }, 300),\n    [location, types]\n  );\n\n  useEffect(() => {\n    fetchSuggestions(inputValue);\n  }, [inputValue, fetchSuggestions]);\n\n  const handleSelect = (suggestion: Suggestion) => {\n    setInputValue(suggestion.description);\n    setSelectedValue(suggestion.description);\n    onPlaceSelect(suggestion.placeId, suggestion.description);\n    setOpen(false);\n  };\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"outline\"\n          role=\"combobox\"\n          aria-expanded={open}\n          className=\"w-full justify-between h-10\"\n        >\n          {selectedValue ? selectedValue : 'Search for a school...'}\n          <ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[--radix-popover-trigger-width] p-0\">\n        <Command shouldFilter={false}>\n          <CommandInput\n            placeholder=\"Type to search...\"\n            value={inputValue}\n            onValueChange={setInputValue}\n          />\n          <CommandList>\n            {isLoading && (\n              <div className='flex items-center justify-center p-2'>\n                <LoaderCircle className='animate-spin w-5 h-5' />\n              </div>\n            )}\n            {!isLoading && suggestions.length === 0 && inputValue.length > 2 && (\n              <CommandEmpty>No places found.</CommandEmpty>\n            )}\n            <CommandGroup>\n              {suggestions.map((suggestion) => (\n                <CommandItem\n                  key={suggestion.placeId}\n                  value={suggestion.description}\n                  onSelect={() => handleSelect(suggestion)}\n                >\n                  <Check\n                    className={cn(\n                      'mr-2 h-4 w-4',\n                      selectedValue === suggestion.description ? 'opacity-100' : 'opacity-0'\n                    )}\n                  />\n                  {suggestion.description}\n                </CommandItem>\n              ))}\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AATA;;;;;;;;;AAsBO,SAAS,kBAAkB,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAA0B;;IAC1F,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IAC/D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD,EACjC,CAAA,GAAA,8IAAA,CAAA,UAAQ,AAAD;2DAAE,OAAO;YACd,IAAI,MAAM,MAAM,GAAG,GAAG;gBACpB,eAAe,EAAE;gBACjB;YACF;YACA,aAAa;YACb,MAAM,SAAS,MAAM,CAAA,GAAA,qJAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO,UAAU;YACzD,IAAI,OAAO,OAAO,IAAI,OAAO,IAAI,EAAE;gBACjC,eAAe,OAAO,IAAI;YAC5B,OAAO;gBACL,eAAe,EAAE;YACnB;YACA,aAAa;QACf;0DAAG,MACH;QAAC;QAAU;KAAM;IAGnB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACR,iBAAiB;QACnB;sCAAG;QAAC;QAAY;KAAiB;IAEjC,MAAM,eAAe,CAAC;QACpB,cAAc,WAAW,WAAW;QACpC,iBAAiB,WAAW,WAAW;QACvC,cAAc,WAAW,OAAO,EAAE,WAAW,WAAW;QACxD,QAAQ;IACV;IAEA,qBACE,6LAAC,sIAAA,CAAA,UAAO;QAAC,MAAM;QAAM,cAAc;;0BACjC,6LAAC,sIAAA,CAAA,iBAAc;gBAAC,OAAO;0BACrB,cAAA,6LAAC,qIAAA,CAAA,SAAM;oBACL,SAAQ;oBACR,MAAK;oBACL,iBAAe;oBACf,WAAU;;wBAET,gBAAgB,gBAAgB;sCACjC,6LAAC,iOAAA,CAAA,iBAAc;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAG9B,6LAAC,sIAAA,CAAA,iBAAc;gBAAC,WAAU;0BACxB,cAAA,6LAAC,sIAAA,CAAA,UAAO;oBAAC,cAAc;;sCACrB,6LAAC,sIAAA,CAAA,eAAY;4BACX,aAAY;4BACZ,OAAO;4BACP,eAAe;;;;;;sCAEjB,6LAAC,sIAAA,CAAA,cAAW;;gCACT,2BACC,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC,yNAAA,CAAA,eAAY;wCAAC,WAAU;;;;;;;;;;;gCAG3B,CAAC,aAAa,YAAY,MAAM,KAAK,KAAK,WAAW,MAAM,GAAG,mBAC7D,6LAAC,sIAAA,CAAA,eAAY;8CAAC;;;;;;8CAEhB,6LAAC,sIAAA,CAAA,eAAY;8CACV,YAAY,GAAG,CAAC,CAAC,2BAChB,6LAAC,sIAAA,CAAA,cAAW;4CAEV,OAAO,WAAW,WAAW;4CAC7B,UAAU,IAAM,aAAa;;8DAE7B,6LAAC,uMAAA,CAAA,QAAK;oDACJ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gBACA,kBAAkB,WAAW,WAAW,GAAG,gBAAgB;;;;;;gDAG9D,WAAW,WAAW;;2CAVlB,WAAW,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBzC;GAvFgB;KAAA","debugId":null}},
    {"offset": {"line": 1044, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/parental-alerts/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { MapComponent } from '@/components/map';\nimport { LoaderCircle, School, MapPin, Home, Clock, AlertTriangle, ShieldAlert, CheckCircle2 } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { getPlaceDetails } from '@/lib/places-service';\nimport { getDirections, DirectionDetails } from '@/lib/directions-service';\nimport { Badge } from '@/components/ui/badge';\nimport { PlaceAutocomplete } from '@/components/place-autocomplete';\n\n\ntype School = {\n  place_id: string;\n  name: string;\n  vicinity: string;\n  location: { lat: number; lng: number };\n};\n\ntype Location = {\n  lat: number;\n  lng: number;\n};\n\nexport default function ParentalAlertsPage() {\n  const [homeLocation, setHomeLocation] = useState<Location | null>(null);\n  const [selectedSchool, setSelectedSchool] = useState<School | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isCalculatingRoute, setIsCalculatingRoute] = useState(false);\n  const [routeDetails, setRouteDetails] = useState<DirectionDetails | null>(null);\n  \n  const { toast } = useToast();\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const loc = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n          setHomeLocation(loc);\n          setIsLoading(false);\n        },\n        (error) => {\n          console.error(\"Error getting location:\", error);\n          toast({ variant: 'destructive', title: 'Could not get your location.' });\n          setIsLoading(false);\n        }\n      );\n    } else {\n        setIsLoading(false);\n    }\n  }, [toast]);\n  \n  const handleSchoolSelect = async (placeId: string, description: string) => {\n    try {\n        const result = await getPlaceDetails(placeId);\n        if (result.success && result.data) {\n            const newSchool: School = {\n                place_id: placeId,\n                name: result.data.name,\n                vicinity: result.data.address,\n                location: {\n                    lat: result.data.location.lat,\n                    lng: result.data.location.lng\n                }\n            };\n            setSelectedSchool(newSchool);\n        } else {\n            toast({ variant: 'destructive', title: 'Could not get school details', description: result.error });\n        }\n    } catch (e) {\n        toast({ variant: 'destructive', title: 'Error fetching school details' });\n    }\n  }\n\n  useEffect(() => {\n    const calculateRoute = async () => {\n      if (homeLocation && selectedSchool) {\n        setIsCalculatingRoute(true);\n        setRouteDetails(null);\n        try {\n          const result = await getDirections(homeLocation, selectedSchool.location);\n          if (result.success && result.data) {\n            setRouteDetails(result.data);\n          } else {\n             toast({ variant: 'destructive', title: 'Could not calculate route.', description: result.error });\n          }\n        } catch(e) {\n          toast({ variant: 'destructive', title: 'An error occurred while calculating the route.' });\n        } finally {\n          setIsCalculatingRoute(false);\n        }\n      }\n    };\n    calculateRoute();\n  }, [homeLocation, selectedSchool, toast])\n  \n  const mapCenter = useMemo(() => {\n      if (selectedSchool) return selectedSchool.location;\n      if (homeLocation) return homeLocation;\n      return { lat: 37.7749, lng: -122.4194 };\n  }, [homeLocation, selectedSchool])\n\n  const mapPins = useMemo(() => {\n    const pins = [];\n    if(homeLocation) {\n        pins.push({ id: 'home', location: { latitude: homeLocation.lat, longitude: homeLocation.lng }, category: 'Home', severity: 'Low', summary: 'Home', timestamp: ''})\n    }\n    if(selectedSchool) {\n        pins.push({ id: selectedSchool.place_id, location: { latitude: selectedSchool.location.lat, longitude: selectedSchool.location.lng }, category: 'School', severity: 'Low', summary: selectedSchool.name, timestamp: ''})\n    }\n    return pins;\n  }, [homeLocation, selectedSchool])\n  \n  const TrafficAlertCard = ({details}: {details: DirectionDetails}) => {\n      let AlertIcon = CheckCircle2;\n      let cardColor = 'bg-green-50 border-green-200';\n      let textColor = 'text-green-800';\n      let badgeColor = 'bg-green-500 hover:bg-green-500/80';\n      let statusText = 'Light Traffic';\n      \n      if (details.trafficStatus === 'moderate') {\n        AlertIcon = ShieldAlert;\n        cardColor = 'bg-yellow-50 border-yellow-200';\n        textColor = 'text-yellow-800';\n        badgeColor = 'bg-yellow-500 hover:bg-yellow-500/80';\n        statusText = 'Moderate Traffic';\n      } else if (details.trafficStatus === 'heavy') {\n        AlertIcon = AlertTriangle;\n        cardColor = 'bg-red-50 border-red-200';\n        textColor = 'text-red-800';\n        badgeColor = 'bg-red-500 hover:bg-red-500/80';\n        statusText = 'Heavy Traffic';\n      }\n\n      return (\n        <Card className={`shadow-lg animate-in fade-in-50 ${cardColor}`}>\n            <CardHeader>\n                <CardTitle className={`flex items-center gap-3 font-headline text-2xl ${textColor}`}>\n                    <AlertIcon className=\"w-8 h-8\" />\n                    Traffic Alert for Your Route\n                </CardTitle>\n                <CardDescription>To {selectedSchool?.name}</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n                <div className='flex justify-around text-center'>\n                    <div>\n                        <p className='text-sm font-medium text-muted-foreground'>Est. Travel Time</p>\n                        <p className={`text-3xl font-bold ${textColor}`}>{details.durationInTraffic}</p>\n                    </div>\n                    <div>\n                        <p className='text-sm font-medium text-muted-foreground'>Distance</p>\n                        <p className={`text-3xl font-bold ${textColor}`}>{details.distance}</p>\n                    </div>\n                </div>\n                <div className='text-center'>\n                    <Badge className={badgeColor}>{statusText}</Badge>\n                </div>\n                <p className=\"text-sm text-center text-muted-foreground pt-2\">{details.summary}</p>\n            </CardContent>\n        </Card>\n      )\n  }\n\n  return (\n    <div className=\"bg-background min-h-screen\">\n      <main className=\"container mx-auto px-4 py-8 md:py-16\">\n        <header className=\"text-center mb-8\">\n          <h1 className=\"text-4xl sm:text-5xl font-bold font-headline text-primary\">Parental Alerts</h1>\n          <p className=\"mt-4 text-lg text-muted-foreground\">Check traffic conditions for the route to your child's school.</p>\n        </header>\n        \n        {isLoading && (\n            <div className='flex justify-center items-center gap-2 text-muted-foreground'>\n                <LoaderCircle className=\"w-5 h-5 animate-spin\" />\n                <p>Getting your current location...</p>\n            </div>\n        )}\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          <div className=\"md:col-span-1 space-y-6\">\n             <Card>\n                <CardHeader>\n                    <CardTitle className='flex items-center gap-2'><Home className='w-5 h-5 text-primary' /> Your Location</CardTitle>\n                </CardHeader>\n                <CardContent>\n                    {homeLocation ? (\n                       <p className='text-muted-foreground text-sm font-mono'>\n                           Lat: {homeLocation.lat.toFixed(5)}, Lng: {homeLocation.lng.toFixed(5)}\n                       </p>\n                    ) : (\n                        <p className='text-muted-foreground text-sm'>Location not available.</p>\n                    )}\n                </CardContent>\n             </Card>\n             <Card>\n                <CardHeader>\n                    <CardTitle className='flex items-center gap-2'><School className='w-5 h-5 text-primary' /> Find a School</CardTitle>\n                </CardHeader>\n                <CardContent>\n                    <PlaceAutocomplete \n                        onPlaceSelect={handleSchoolSelect}\n                        location={homeLocation}\n                        types={['school', 'primary_school', 'secondary_school']}\n                    />\n                </CardContent>\n             </Card>\n          </div>\n          <div className=\"md:col-span-2 space-y-6\">\n            <Card className=\"h-[450px]\">\n                 <MapComponent\n                    incidents={mapPins}\n                    onPinClick={() => {}}\n                    center={mapCenter}\n                    zoom={selectedSchool ? 14 : 12}\n                    routePolyline={routeDetails?.polyline}\n                  />\n            </Card>\n            {isCalculatingRoute && (\n                 <Card className=\"flex items-center justify-center p-8\">\n                    <LoaderCircle className=\"w-8 h-8 animate-spin text-primary mr-4\" />\n                    <p className=\"text-muted-foreground\">Calculating best route and checking traffic...</p>\n                 </Card>\n            )}\n            {routeDetails && <TrafficAlertCard details={routeDetails} />}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}