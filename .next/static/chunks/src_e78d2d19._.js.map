{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/analyze-incident-report.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A flow to analyze incident reports based on media and description.\n *\n * - analyzeIncidentReport - A function that handles the incident analysis process.\n * - AnalyzeIncidentReportInput - The input type for the analyzeIncidentReport function.\n * - AnalyzeIncidentReportOutput - The return type for the analyzeIncidentReport function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst AnalyzeIncidentReportInputSchema = z.object({\n  mediaDataUri: z\n    .string()\n    .describe(\n      \"A photo or video of the incident, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n  description: z.string().describe('The description of the incident.'),\n  location: z.object({\n    latitude: z.number().describe('Latitude of the incident location.'),\n    longitude: z.number().describe('Longitude of the incident location.'),\n  }).describe('The location of the incident.'),\n});\nexport type AnalyzeIncidentReportInput = z.infer<typeof AnalyzeIncidentReportInputSchema>;\n\nconst AnalyzeIncidentReportOutputSchema = z.object({\n  incidentCategory: z.string().describe('The category of the incident.'),\n  severity: z.enum(['Low', 'Medium', 'High']).describe('The severity of the incident.'),\n  summaryReport: z.string().describe('A summary report of the incident.'),\n});\nexport type AnalyzeIncidentReportOutput = z.infer<typeof AnalyzeIncidentReportOutputSchema>;\n\nexport async function analyzeIncidentReport(input: AnalyzeIncidentReportInput): Promise<AnalyzeIncidentReportOutput> {\n  return analyzeIncidentReportFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'analyzeIncidentReportPrompt',\n  input: {schema: AnalyzeIncidentReportInputSchema},\n  output: {schema: AnalyzeIncidentReportOutputSchema},\n  prompt: `You are an AI assistant designed to analyze incident reports. Your task is to categorize the incident, determine its severity, and provide a summary based on the provided media, description, and location.\n\n  **Incident Information:**\n  - **Description:** {{{description}}}\n  - **Location:** Latitude: {{{location.latitude}}}, Longitude: {{{location.longitude}}}\n  - **Media:** {{media url=mediaDataUri}}\n\n  **Analysis Tasks:**\n\n  1.  **Categorize the Incident:** Classify the incident into one of the following categories:\n      *   Road Accidents\n      *   Fire Accidents\n      *   Electrical Issues\n      *   Water Logging\n      *   Drainage/Fallen Tree\n      *   Road Blockages\n      *   Construction Zones\n      *   Other\n\n  2.  **Determine Severity:** Assess the severity of the incident as 'Low', 'Medium', or 'High' based on the visual evidence and description. Consider factors like potential danger, impact on public, and scale of the event.\n\n  3.  **Generate Summary:** Write a concise summary of the incident. The summary should be a factual depiction of what is happening.\n\n  Provide the output in the requested structured format.`,\n});\n\nconst analyzeIncidentReportFlow = ai.defineFlow(\n  {\n    name: 'analyzeIncidentReportFlow',\n    inputSchema: AnalyzeIncidentReportInputSchema,\n    outputSchema: AnalyzeIncidentReportOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAkCsB,wBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/incidents-service.ts"],"sourcesContent":["'use server';\n\nimport { db } from '@/lib/firebase';\nimport { collection, addDoc, getDocs, serverTimestamp, Timestamp } from \"firebase/firestore\";\nimport { Incident } from '@/lib/types';\n\nexport interface IncidentData {\n    location: {\n        latitude: number;\n        longitude: number;\n    };\n    category: string;\n    severity: string;\n    summary: string;\n    address?: string;\n}\n\nexport async function saveIncidentReport(incidentData: IncidentData) {\n    try {\n        const docRef = await addDoc(collection(db, \"incidents\"), {\n            location: incidentData.location,\n            category: incidentData.category,\n            severity: incidentData.severity,\n            summary: incidentData.summary,\n            address: incidentData.address || null,\n            timestamp: serverTimestamp(),\n        });\n        console.log(\"Document written with ID: \", docRef.id);\n        return { success: true, id: docRef.id };\n    } catch (e) {\n        console.error(\"Error adding document: \", e);\n        if (e instanceof Error) {\n            if (e.message.includes('PERMISSION_DENIED')) {\n                 return { success: false, error: 'Permission Denied. Please check your Firestore security rules in the Firebase Console. This is a common issue and is required for the app to save data.' };\n            }\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'An unknown error occurred while saving the incident report.' };\n    }\n}\n\nexport async function getIncidents() {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'incidents'));\n    const incidents: Incident[] = querySnapshot.docs.map(doc => {\n      const data = doc.data();\n      const timestamp = data.timestamp as Timestamp;\n      \n      return {\n        id: doc.id,\n        location: {\n          latitude: data.location.latitude,\n          longitude: data.location.longitude,\n        },\n        category: data.category,\n        severity: data.severity,\n        summary: data.summary,\n        timestamp: timestamp.toDate().toISOString(),\n        address: data.address || undefined,\n      };\n    });\n    return { success: true, data: incidents };\n  } catch (e) {\n    console.error(\"Error getting documents: \", e);\n    if (e instanceof Error) {\n      if (e.message.includes('PERMISSION_DENIED')) {\n        return { success: false, error: 'Permission Denied. Could not retrieve incidents. Please check your Firestore security rules.' };\n      }\n      return { success: false, error: e.message };\n    }\n    return { success: false, error: 'An unknown error occurred while fetching incidents.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAiBsB,qBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/initiate-agent-call-flow.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A flow to initiate an agentic call via ElevenLabs.\n *\n * - initiateAgentCall - A function that handles making the outbound call.\n * - InitiateAgentCallInput - The input type for the initiateAgentCall function.\n * - InitiateAgentCallOutput - The return type for the initiateAgentCall function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\n\nconst InitiateAgentCallInputSchema = z.object({\n  agentId: z.string().describe('The ID of the ElevenLabs agent to use.'),\n  agentPhoneNumberId: z.string().describe('The ID of the agent\\'s Twilio phone number.'),\n  toNumber: z.string().describe('The phone number to call.'),\n  incidentSummary: z.string().describe('A summary of the incident for context.'),\n});\nexport type InitiateAgentCallInput = z.infer<typeof InitiateAgentCallInputSchema>;\n\nconst InitiateAgentCallOutputSchema = z.object({\n  success: z.boolean(),\n  message: z.string(),\n  conversation_id: z.string().optional(),\n  callSid: z.string().optional(),\n});\nexport type InitiateAgentCallOutput = z.infer<typeof InitiateAgentCallOutputSchema>;\n\nexport async function initiateAgentCall(input: InitiateAgentCallInput): Promise<InitiateAgentCallOutput> {\n  const apiKey = process.env.ELEVENLABS_API_KEY;\n\n  if (!apiKey) {\n    throw new Error('ElevenLabs API key is not configured in environment variables.');\n  }\n\n  const url = 'https://api.elevenlabs.io/v1/convai/twilio/outbound-call';\n\n  const headers = {\n    'xi-api-key': apiKey,\n    'Content-Type': 'application/json',\n  };\n\n  const body = JSON.stringify({\n    agent_id: input.agentId,\n    agent_phone_number_id: input.agentPhoneNumberId,\n    to_number: input.toNumber,\n    conversation_initiation_client_data: {\n      type: \"conversation_initiation_client_data\",\n      dynamic_variables: {\n          incidentSummary: input.incidentSummary\n      }\n    }\n  });\n\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: headers,\n      body: body,\n    });\n\n    const responseData = await response.json();\n\n    if (!response.ok) {\n        return {\n            success: false,\n            message: `API Error: ${responseData.detail?.msg || responseData.detail || response.statusText}`,\n        };\n    }\n    \n    // The API returns a 'call_details' object on success, which contains the callSid.\n    // Let's check for that structure.\n    return {\n      success: responseData.success ?? true,\n      message: responseData.message ?? 'Call initiated successfully.',\n      conversation_id: responseData.conversation_id,\n      callSid: responseData.call_details?.callSid,\n    };\n\n  } catch (error: any) {\n    console.error('Error initiating agent call:', error);\n    return {\n      success: false,\n      message: error.message || 'An unknown error occurred.',\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;IA6BsB,oBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAEA;AACA;AASA;AACA;;;AAfA;;;;;;AAiBA,MAAM,OAAO,iKAAA,CAAA,eAAY;AASzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EACzC,CAAC;AAGH,MAAM,YAAY,CAGhB,EACA,GAAG,OACkC;IACrC,qBACE,6LAAC,iBAAiB,QAAQ;QAAC,OAAO;YAAE,MAAM,MAAM,IAAI;QAAC;kBACnD,cAAA,6LAAC,iKAAA,CAAA,aAAU;YAAE,GAAG,KAAK;;;;;;;;;;;AAG3B;KAXM;AAaN,MAAM,eAAe;;IACnB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IACtC,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IACrC,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,iBAAc,AAAD;IAElD,MAAM,aAAa,cAAc,aAAa,IAAI,EAAE;IAEpD,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,OAAO;QACL;QACA,MAAM,aAAa,IAAI;QACvB,YAAY,GAAG,GAAG,UAAU,CAAC;QAC7B,mBAAmB,GAAG,GAAG,sBAAsB,CAAC;QAChD,eAAe,GAAG,GAAG,kBAAkB,CAAC;QACxC,GAAG,UAAU;IACf;AACF;GArBM;;QAGiC,iKAAA,CAAA,iBAAc;;;AAwBrD,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EACxC,CAAC;AAGH,MAAM,yBAAW,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,KAAK,CAAA,GAAA,6JAAA,CAAA,QAAW,AAAD;IAErB,qBACE,6LAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAG;kBACpC,cAAA,6LAAC;YAAI,KAAK;YAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;YAAa,GAAG,KAAK;;;;;;;;;;;AAGrE;;AACA,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;IAE9B,qBACE,6LAAC,oIAAA,CAAA,QAAK;QACJ,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,SAAS,oBAAoB;QAC3C,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;;QAVgC;;;;QAAA;;;;AAWhC,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGjC,CAAC,EAAE,GAAG,OAAO,EAAE;;IACf,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG;IAEhE,qBACE,6LAAC,mKAAA,CAAA,OAAI;QACH,KAAK;QACL,IAAI;QACJ,oBACE,CAAC,QACG,GAAG,mBAAmB,GACtB,GAAG,kBAAkB,CAAC,EAAE,eAAe;QAE7C,gBAAc,CAAC,CAAC;QACf,GAAG,KAAK;;;;;;AAGf;;QAfkE;;;;QAAA;;;;AAgBlE,YAAY,WAAW,GAAG;AAE1B,MAAM,gCAAkB,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,EAAE,iBAAiB,EAAE,GAAG;IAE9B,qBACE,6LAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;;QAVgC;;;;QAAA;;;;AAWhC,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;;IACpC,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,OAAO,QAAQ,OAAO,OAAO,WAAW,MAAM;IAEpD,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,wCAAwC;QACrD,GAAG,KAAK;kBAER;;;;;;AAGP;;QAjBmC;;;;QAAA;;;;AAkBnC,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/report-incident-form.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { analyzeIncidentReport, type AnalyzeIncidentReportOutput } from '@/ai/flows/analyze-incident-report';\nimport { saveIncidentReport } from '@/lib/incidents-service';\nimport { initiateAgentCall } from '@/ai/flows/initiate-agent-call-flow';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { useToast } from '@/hooks/use-toast';\nimport { UploadCloud, MapPin, FileText, LoaderCircle, Sparkles, Server, PhoneOutgoing } from 'lucide-react';\nimport Image from 'next/image';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Label } from '@/components/ui/label';\nimport { useJsApiLoader } from '@react-google-maps/api';\n\nconst MAX_FILE_SIZE = 50 * 1024 * 1024; // 50MB\nconst ACCEPTED_MEDIA_TYPES = ['image/jpeg', 'image/png', 'image/webp', 'video/mp4', 'video/quicktime', 'video/webm'];\n\nconst formSchema = z.object({\n  media: z\n    .custom<FileList>()\n    .refine((files) => files && files.length > 0, 'An image or video file is required.')\n    .refine((files) => files && files[0]?.size <= MAX_FILE_SIZE, `Max file size is 50MB.`)\n    .refine(\n      (files) => files && ACCEPTED_MEDIA_TYPES.includes(files[0]?.type),\n      'Unsupported file format. Please upload an image or video.'\n    ),\n  description: z.string().max(1000, 'Description must be 1000 characters or less.').optional(),\n});\n\ntype LocationState = {\n  latitude: number;\n  longitude: number;\n  address?: string;\n  error?: string | null;\n} | null;\n\nexport function ReportIncidentForm() {\n  const [location, setLocation] = useState<LocationState>(null);\n  const [mediaPreview, setMediaPreview] = useState<string | null>(null);\n  const [mediaType, setMediaType] = useState<string | null>(null);\n  const [analysisResult, setAnalysisResult] = useState<AnalyzeIncidentReportOutput | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isCalling, setIsCalling] = useState(false);\n  const { toast } = useToast();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      media: undefined,\n      description: '',\n    },\n  });\n\n  const { isLoaded: isMapLoaded } = useJsApiLoader({\n    id: 'google-map-script-incident-report',\n    googleMapsApiKey: process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY || '',\n    libraries: ['geocoding'],\n  });\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const newLocation = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n          };\n          setLocation(newLocation);\n        },\n        (error) => {\n          setLocation({ latitude: 0, longitude: 0, error: `Location access denied. Analysis may be less accurate.` });\n        }\n      );\n    } else {\n      setLocation({ latitude: 0, longitude: 0, error: \"Geolocation is not supported by this browser.\" });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (location && !location.address && !location.error && isMapLoaded && window.google) {\n      const geocoder = new google.maps.Geocoder();\n      geocoder.geocode({ location: { lat: location.latitude, lng: location.longitude } }, (results, status) => {\n        if (status === 'OK' && results && results[0]) {\n          setLocation(prevLoc => prevLoc ? { ...prevLoc, address: results[0].formatted_address } : null);\n        } else {\n          console.warn(`Geocoding failed: ${status}`);\n        }\n      });\n    }\n  }, [location, isMapLoaded]);\n\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      setMediaType(file.type);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setMediaPreview(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  \n  const onDragOver = (e: React.DragEvent<HTMLDivElement>) => e.preventDefault();\n\n  const onDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    if (files && files.length > 0) {\n      form.setValue('media', files, { shouldValidate: true });\n      handleFileChange({ target: { files } } as React.ChangeEvent<HTMLInputElement>);\n    }\n  };\n  \n  const handleSaveToFirestore = async () => {\n    if (!analysisResult || !location) {\n      toast({\n        variant: 'destructive',\n        title: 'Cannot Save',\n        description: 'No analysis result or location data available to save.',\n      });\n      return;\n    }\n\n    setIsSaving(true);\n    try {\n      const result = await saveIncidentReport({\n        location: { latitude: location.latitude, longitude: location.longitude },\n        category: analysisResult.incidentCategory,\n        severity: analysisResult.severity,\n        summary: analysisResult.summaryReport,\n        address: location.address,\n      });\n\n      if (result.success) {\n        toast({\n          title: 'Report Saved',\n          description: `The incident report has been successfully saved with ID: ${result.id}`,\n        });\n      } else {\n        throw new Error(result.error || 'Unknown error saving to Firestore');\n      }\n    } catch (e: any) {\n      console.error(e);\n      toast({\n        variant: 'destructive',\n        title: 'Save Failed',\n        description: e.message || 'Something went wrong while saving the report.',\n      });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const handleAgentCall = async () => {\n    if (!analysisResult || !location) return;\n    setIsCalling(true);\n    try {\n       const agentId = process.env.NEXT_PUBLIC_ELEVENLABS_AGENT_ID;\n       const agentPhoneNumberId = process.env.NEXT_PUBLIC_ELEVENLABS_AGENT_PHONE_NUMBER_ID;\n       const toNumber = process.env.NEXT_PUBLIC_EMERGENCY_CONTACT_NUMBER;\n\n       if (!agentId || !agentPhoneNumberId || !toNumber) {\n         throw new Error('Required environment variables for ElevenLabs agent call are not set.');\n       }\n\n       const summary = `\n        Incident Type: ${analysisResult.incidentCategory}.\n        Details: ${analysisResult.summaryReport}.\n        Location Address: ${location.address || 'Not available'}.\n        Coordinates: Latitude ${location.latitude}, Longitude ${location.longitude}.\n       `;\n\n       const result = await initiateAgentCall({\n         agentId,\n         agentPhoneNumberId,\n         toNumber,\n         incidentSummary: summary,\n       });\n\n       if (result.success) {\n         toast({\n           title: 'Call Initiated Successfully',\n           description: `Call in progress. SID: ${result.callSid || 'N/A'}.`,\n         });\n       } else {\n         throw new Error(result.message || 'An unknown error occurred during the call.');\n       }\n\n    } catch(e: any) {\n       console.error(e);\n       toast({\n         variant: 'destructive',\n         title: 'Failed to Initiate Call',\n         description: e.message,\n       });\n    } finally {\n      setIsCalling(false);\n    }\n  }\n\n\n  async function onSubmit(values: z.infer<typeof formSchema>) {\n    if (!location) {\n      toast({\n        variant: 'destructive',\n        title: 'Location Required',\n        description: 'Location data is still being determined. Please wait a moment.',\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    setAnalysisResult(null);\n\n    const file = values.media[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = async () => {\n      try {\n        const mediaDataUri = reader.result as string;\n        const result = await analyzeIncidentReport({\n          mediaDataUri,\n          description: values.description || '',\n          location: { latitude: location.latitude, longitude: location.longitude },\n        });\n        setAnalysisResult(result);\n        toast({\n          title: 'Analysis Complete',\n          description: 'The incident report has been successfully analyzed.',\n        });\n      } catch (e) {\n        console.error(e);\n        toast({\n          variant: 'destructive',\n          title: 'Analysis Failed',\n          description: 'Something went wrong while analyzing the incident. Please try again.',\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    reader.onerror = () => {\n      toast({\n        variant: 'destructive',\n        title: 'File Error',\n        description: 'There was an error reading the file.',\n      });\n      setIsLoading(false);\n    };\n  }\n\n  return (\n    <div className=\"w-full max-w-3xl mx-auto\">\n      <Card className=\"shadow-lg\">\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)}>\n            <CardHeader>\n              <CardTitle className=\"font-headline text-2xl flex items-center gap-2\">Report an Incident</CardTitle>\n              <CardDescription>Fill out the details below to submit an incident report.</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <FormField\n                control={form.control}\n                name=\"media\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-lg font-semibold\">Incident Media</FormLabel>\n                    <FormControl>\n                      <div\n                        className=\"relative border-2 border-dashed border-muted-foreground/50 rounded-lg p-4 text-center cursor-pointer hover:border-primary transition-colors h-64 flex flex-col items-center justify-center\"\n                        onClick={() => fileInputRef.current?.click()}\n                        onDragOver={onDragOver}\n                        onDrop={onDrop}\n                      >\n                        {mediaPreview ? (\n                          mediaType?.startsWith('video') ? (\n                            <video src={mediaPreview} className=\"absolute inset-0 w-full h-full object-cover rounded-md\" controls />\n                          ) : (\n                            <Image src={mediaPreview} alt=\"Media preview\" layout=\"fill\" objectFit=\"cover\" className=\"rounded-md\" />\n                          )\n                        ) : (\n                          <div className=\"flex flex-col items-center gap-2 text-muted-foreground\">\n                            <UploadCloud className=\"w-12 h-12\" />\n                            <span className=\"font-semibold\">Click to upload or drag and drop</span>\n                            <span className=\"text-sm\">Image or Video (Max 50MB)</span>\n                          </div>\n                        )}\n                        <Input\n                          {...field}\n                          ref={fileInputRef}\n                          type=\"file\"\n                          className=\"hidden\"\n                          accept={ACCEPTED_MEDIA_TYPES.join(',')}\n                          value={undefined}\n                          onChange={(e) => {\n                            field.onChange(e.target.files);\n                            handleFileChange(e);\n                          }}\n                        />\n                      </div>\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <div className=\"space-y-2\">\n                <Label className=\"text-lg font-semibold\">Location</Label>\n                <div className=\"flex items-center space-x-3 p-3 bg-muted rounded-md\">\n                  <MapPin className=\"w-5 h-5 text-primary\" />\n                  {location ? (\n                    location.error ? (\n                      <p className=\"text-sm text-destructive\">{location.error}</p>\n                    ) : (\n                      <div>\n                        <p className=\"text-sm font-mono\">Lat: {location.latitude.toFixed(5)}, Lng: {location.longitude.toFixed(5)}</p>\n                        <p className=\"text-sm text-muted-foreground\">{location.address || 'Resolving address...'}</p>\n                      </div>\n                    )\n                  ) : (\n                    <p className=\"text-sm text-muted-foreground\">Detecting location...</p>\n                  )}\n                </div>\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"description\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel className=\"text-lg font-semibold flex items-center gap-2\">\n                      <FileText className=\"w-5 h-5\" />\n                      Optional Description\n                    </FormLabel>\n                    <FormControl>\n                      <Textarea\n                        placeholder=\"Provide any additional details about the incident...\"\n                        className=\"min-h-[120px]\"\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </CardContent>\n            <CardFooter>\n              <Button type=\"submit\" disabled={isLoading || isSaving} className=\"w-full text-lg py-6\">\n                {isLoading ? (\n                  <>\n                    <LoaderCircle className=\"mr-2 h-5 w-5 animate-spin\" />\n                    Analyzing...\n                  </>\n                ) : (\n                  'Analyze and Report Incident'\n                )}\n              </Button>\n            </CardFooter>\n          </form>\n        </Form>\n      </Card>\n\n      {analysisResult && (\n        <Card className=\"mt-8 shadow-lg animate-in fade-in-50\">\n          <CardHeader>\n            <CardTitle className=\"font-headline text-2xl flex items-center gap-2\">\n              <Sparkles className=\"w-6 h-6 text-primary\" />\n              Analysis Report\n            </CardTitle>\n            <CardDescription>Here is the AI-generated analysis of the incident.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div>\n              <h3 className=\"font-semibold text-lg text-primary\">Incident Category</h3>\n              <p className=\"text-lg bg-muted p-3 rounded-md mt-1\">{analysisResult.incidentCategory}</p>\n            </div>\n            <div>\n              <h3 className=\"font-semibold text-lg text-primary\">Severity</h3>\n              <p className=\"text-lg bg-muted p-3 rounded-md mt-1\">{analysisResult.severity}</p>\n            </div>\n            <div>\n              <h3 className=\"font-semibold text-lg text-primary\">Summary Report</h3>\n              <p className=\"text-muted-foreground leading-relaxed bg-muted p-3 rounded-md mt-1\">{analysisResult.summaryReport}</p>\n            </div>\n          </CardContent>\n           <CardFooter className='flex-col sm:flex-row gap-4'>\n             <Button onClick={handleSaveToFirestore} disabled={isSaving || isLoading || isCalling} className=\"w-full\">\n               {isSaving ? (\n                 <>\n                   <LoaderCircle className=\"mr-2 h-4 w-4 animate-spin\" />\n                   Saving Report...\n                 </>\n               ) : (\n                 <>\n                  <Server className=\"mr-2 h-4 w-4\" />\n                   Save Report\n                 </>\n               )}\n             </Button>\n             <Button onClick={handleAgentCall} variant=\"destructive\" disabled={isCalling || isSaving || isLoading || !location?.address} className=\"w-full\">\n                {isCalling ? (\n                    <><LoaderCircle className=\"mr-2 h-4 w-4 animate-spin\" />Calling...</>\n                ) : (\n                    <><PhoneOutgoing className=\"mr-2 h-4 w-4\" />Call Emergency Services</>\n                )}\n             </Button>\n           </CardFooter>\n        </Card>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}