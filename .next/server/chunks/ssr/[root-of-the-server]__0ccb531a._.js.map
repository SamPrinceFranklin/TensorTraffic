{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\n// A single configuration for Firebase services for the client\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// A server-specific configuration, ensuring we use the correct credentials on the server\nconst firebaseServerConfig = {\n    apiKey: process.env.FIREBASE_API_KEY,\n    authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.FIREBASE_PROJECT_ID,\n    storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.FIREBASE_APP_ID,\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(typeof window === 'undefined' ? firebaseServerConfig : firebaseConfig) : getApp();\nconst db = getFirestore(app);\n\nexport { db };\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;AACvD;AAAA;AACA;AAAA;;;AAEA,8DAA8D;AAC9D,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,yFAAyF;AACzF,MAAM,uBAAuB;IACzB,QAAQ,QAAQ,GAAG,CAAC,gBAAgB;IACpC,YAAY,QAAQ,GAAG,CAAC,oBAAoB;IAC5C,WAAW,QAAQ,GAAG,CAAC,mBAAmB;IAC1C,eAAe,QAAQ,GAAG,CAAC,uBAAuB;IAClD,mBAAmB,QAAQ,GAAG,CAAC,4BAA4B;IAC3D,OAAO,QAAQ,GAAG,CAAC,eAAe;AACtC;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,uCAAgC,+DAAyC,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AAC5H,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/incidents-service.ts"],"sourcesContent":["'use server';\n\nimport { db } from '@/lib/firebase';\nimport { collection, addDoc, getDocs, serverTimestamp, Timestamp } from \"firebase/firestore\";\nimport { Incident } from '@/lib/types';\n\nexport interface IncidentData {\n    location: {\n        latitude: number;\n        longitude: number;\n    };\n    category: string;\n    severity: string;\n    summary: string;\n    address?: string;\n}\n\nexport async function saveIncidentReport(incidentData: IncidentData) {\n    try {\n        const docRef = await addDoc(collection(db, \"incidents\"), {\n            location: incidentData.location,\n            category: incidentData.category,\n            severity: incidentData.severity,\n            summary: incidentData.summary,\n            address: incidentData.address || null,\n            timestamp: serverTimestamp(),\n        });\n        console.log(\"Document written with ID: \", docRef.id);\n        return { success: true, id: docRef.id };\n    } catch (e) {\n        console.error(\"Error adding document: \", e);\n        if (e instanceof Error) {\n            if (e.message.includes('PERMISSION_DENIED')) {\n                 return { success: false, error: 'Permission Denied. Please check your Firestore security rules in the Firebase Console. This is a common issue and is required for the app to save data.' };\n            }\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'An unknown error occurred while saving the incident report.' };\n    }\n}\n\nexport async function getIncidents() {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'incidents'));\n    const incidents: Incident[] = querySnapshot.docs.map(doc => {\n      const data = doc.data();\n      const timestamp = data.timestamp as Timestamp;\n      \n      return {\n        id: doc.id,\n        location: {\n          latitude: data.location.latitude,\n          longitude: data.location.longitude,\n        },\n        category: data.category,\n        severity: data.severity,\n        summary: data.summary,\n        timestamp: timestamp.toDate().toISOString(),\n        address: data.address || undefined,\n      };\n    });\n    return { success: true, data: incidents };\n  } catch (e) {\n    console.error(\"Error getting documents: \", e);\n    if (e instanceof Error) {\n      if (e.message.includes('PERMISSION_DENIED')) {\n        return { success: false, error: 'Permission Denied. Could not retrieve incidents. Please check your Firestore security rules.' };\n      }\n      return { success: false, error: e.message };\n    }\n    return { success: false, error: 'An unknown error occurred while fetching incidents.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAAA;;;;;;AAcO,eAAe,mBAAmB,YAA0B;IAC/D,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,cAAc;YACrD,UAAU,aAAa,QAAQ;YAC/B,UAAU,aAAa,QAAQ;YAC/B,UAAU,aAAa,QAAQ;YAC/B,SAAS,aAAa,OAAO;YAC7B,SAAS,aAAa,OAAO,IAAI;YACjC,WAAW,CAAA,GAAA,iKAAA,CAAA,kBAAe,AAAD;QAC7B;QACA,QAAQ,GAAG,CAAC,8BAA8B,OAAO,EAAE;QACnD,OAAO;YAAE,SAAS;YAAM,IAAI,OAAO,EAAE;QAAC;IAC1C,EAAE,OAAO,GAAG;QACR,QAAQ,KAAK,CAAC,2BAA2B;QACzC,IAAI,aAAa,OAAO;YACpB,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,sBAAsB;gBACxC,OAAO;oBAAE,SAAS;oBAAO,OAAO;gBAA0J;YAC/L;YACA,OAAO;gBAAE,SAAS;gBAAO,OAAO,EAAE,OAAO;YAAC;QAC9C;QACA,OAAO;YAAE,SAAS;YAAO,OAAO;QAA8D;IAClG;AACJ;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,gBAAgB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE;QACnD,MAAM,YAAwB,cAAc,IAAI,CAAC,GAAG,CAAC,CAAA;YACnD,MAAM,OAAO,IAAI,IAAI;YACrB,MAAM,YAAY,KAAK,SAAS;YAEhC,OAAO;gBACL,IAAI,IAAI,EAAE;gBACV,UAAU;oBACR,UAAU,KAAK,QAAQ,CAAC,QAAQ;oBAChC,WAAW,KAAK,QAAQ,CAAC,SAAS;gBACpC;gBACA,UAAU,KAAK,QAAQ;gBACvB,UAAU,KAAK,QAAQ;gBACvB,SAAS,KAAK,OAAO;gBACrB,WAAW,UAAU,MAAM,GAAG,WAAW;gBACzC,SAAS,KAAK,OAAO,IAAI;YAC3B;QACF;QACA,OAAO;YAAE,SAAS;YAAM,MAAM;QAAU;IAC1C,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,IAAI,aAAa,OAAO;YACtB,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,sBAAsB;gBAC3C,OAAO;oBAAE,SAAS;oBAAO,OAAO;gBAA+F;YACjI;YACA,OAAO;gBAAE,SAAS;gBAAO,OAAO,EAAE,OAAO;YAAC;QAC5C;QACA,OAAO;YAAE,SAAS;YAAO,OAAO;QAAsD;IACxF;AACF;;;IAvDsB;IAwBA;;AAxBA,+OAAA;AAwBA,+OAAA","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-route-alert-flow.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A flow to analyze incidents along a route and generate a summary alert.\n *\n * - generateRouteAlert - A function that handles the route alert generation process.\n * - GenerateRouteAlertInput - The input type for the generateRouteAlert function.\n * - GenerateRouteAlertOutput - The return type for the generateRouteAlert function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\n\nconst IncidentSchema = z.object({\n  id: z.string(),\n  location: z.object({\n    latitude: z.number(),\n    longitude: z.number(),\n  }),\n  category: z.string(),\n  severity: z.string(),\n  summary: z.string(),\n  timestamp: z.string(),\n});\n\nconst GenerateRouteAlertInputSchema = z.object({\n  incidents: z.array(IncidentSchema).describe('A list of incidents detected along the user\\'s planned route.'),\n  fromAddress: z.string().describe('The starting address of the route.'),\n  toAddress: z.string().describe('The destination address of the route.'),\n  nextIncidentDistance: z.string().optional().describe('The estimated travel distance to the very next incident on the route.'),\n});\nexport type GenerateRouteAlertInput = z.infer<typeof GenerateRouteAlertInputSchema>;\n\nconst GenerateRouteAlertOutputSchema = z.object({\n  alertSummary: z.string().describe('A very short, concise, and direct summary of the key incidents on the route to be used for a voice alert. Mention the most severe issues first.'),\n  detailedAlerts: z.array(z.object({\n      incidentId: z.string(),\n      category: z.string(),\n      severity: z.string(),\n      summary: z.string(),\n  })).describe('A list of the individual alerts for the UI.'),\n});\nexport type GenerateRouteAlertOutput = z.infer<typeof GenerateRouteAlertOutputSchema>;\n\nexport async function generateRouteAlert(input: GenerateRouteAlertInput): Promise<GenerateRouteAlertOutput> {\n  return generateRouteAlertFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateRouteAlertPrompt',\n  input: { schema: GenerateRouteAlertInputSchema },\n  output: { schema: GenerateRouteAlertOutputSchema },\n  prompt: `You are a traffic alert system AI. Your task is to provide a very brief voice alert summary and a detailed list of incidents for a user's route from \"{{fromAddress}}\" to \"{{toAddress}}\".\n\nIncidents on route:\n{{#each incidents}}\n- **ID:** {{id}}\n- **Category:** {{category}}\n- **Severity:** {{severity}}\n- **Summary:** {{summary}}\n{{/each}}\n\n{{#if nextIncidentDistance}}\nThe next incident is about {{nextIncidentDistance}} away.\n{{/if}}\n\n**Tasks:**\n\n1.  **Generate Voice Summary:** Create a single, short sentence summarizing the most critical issues on the route. This will be read aloud. Start with \"Alert:\" and be direct. If available, mention the distance to the next incident. For example: \"Alert: There is an accident reported in about 2 miles, plus other incidents ahead.\" or \"Alert: There is heavy traffic due to an accident on Main Street and reported water logging ahead.\" If there are no major issues, say \"Alert: The route ahead is currently clear.\".\n2.  **Create Detailed List:** Create a list of all the incidents provided in the input for display in the UI.\n\nProvide the output in the structured format requested.\n`,\n});\n\nconst generateRouteAlertFlow = ai.defineFlow(\n  {\n    name: 'generateRouteAlertFlow',\n    inputSchema: GenerateRouteAlertInputSchema,\n    outputSchema: GenerateRouteAlertOutputSchema,\n  },\n  async (input) => {\n    const { output } = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9B,IAAI,uIAAA,CAAA,IAAC,CAAC,MAAM;IACZ,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACjB,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;QAClB,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM;IACrB;IACA,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;IAClB,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;IAClB,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM;IACjB,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM;AACrB;AAEA,MAAM,gCAAgC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,WAAW,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,gBAAgB,QAAQ,CAAC;IAC5C,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,sBAAsB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AACvD;AAGA,MAAM,iCAAiC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAClC,gBAAgB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAC7B,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM;QACpB,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;QAClB,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;QAClB,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM;IACrB,IAAI,QAAQ,CAAC;AACf;AAGO,eAAe,mBAAmB,KAA8B;IACrE,OAAO,uBAAuB;AAChC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAE,QAAQ;IAA8B;IAC/C,QAAQ;QAAE,QAAQ;IAA+B;IACjD,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;AAoBX,CAAC;AACD;AAEA,MAAM,yBAAyB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC1C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAO;IACL,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,OAAO;IAChC,OAAO;AACT;;;IAxCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 484, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/text-to-speech-flow.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview A flow to convert text to speech using Google's TTS model.\n *\n * - textToSpeech - A function that handles the text-to-speech conversion.\n * - TextToSpeechInput - The input type for the textToSpeech function.\n * - TextToSpeechOutput - The return type for the textToSpeech function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport wav from 'wav';\n\nconst TextToSpeechInputSchema = z.string().describe('The text to be converted to speech.');\nexport type TextToSpeechInput = z.infer<typeof TextToSpeechInputSchema>;\n\nconst TextToSpeechOutputSchema = z.object({\n    audioDataUri: z.string().describe(\"The generated audio as a data URI. Expected format: 'data:audio/wav;base64,<encoded_data>'.\"),\n});\nexport type TextToSpeechOutput = z.infer<typeof TextToSpeechOutputSchema>;\n\nexport async function textToSpeech(input: TextToSpeechInput): Promise<TextToSpeechOutput> {\n  return textToSpeechFlow(input);\n}\n\nasync function toWav(\n  pcmData: Buffer,\n  channels = 1,\n  rate = 24000,\n  sampleWidth = 2\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const writer = new wav.Writer({\n      channels,\n      sampleRate: rate,\n      bitDepth: sampleWidth * 8,\n    });\n\n    const bufs: any[] = [];\n    writer.on('error', reject);\n    writer.on('data', function (d) {\n      bufs.push(d);\n    });\n    writer.on('end', function () {\n      resolve(Buffer.concat(bufs).toString('base64'));\n    });\n\n    writer.write(pcmData);\n    writer.end();\n  });\n}\n\nconst textToSpeechFlow = ai.defineFlow(\n  {\n    name: 'textToSpeechFlow',\n    inputSchema: TextToSpeechInputSchema,\n    outputSchema: TextToSpeechOutputSchema,\n  },\n  async (text) => {\n    // Handle empty or whitespace-only strings to prevent TTS errors.\n    if (!text || text.trim() === '') {\n      return {\n        audioDataUri: 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA', // Empty WAV file\n      };\n    }\n\n    const { media } = await ai.generate({\n      model: 'googleai/gemini-2.5-flash-preview-tts',\n      config: {\n        responseModalities: ['AUDIO'],\n        speechConfig: {\n          voiceConfig: {\n            prebuiltVoiceConfig: { voiceName: 'Algenib' },\n          },\n        },\n      },\n      prompt: text,\n    });\n\n    if (!media) {\n      throw new Error('No media was returned from the TTS model.');\n    }\n\n    const audioBuffer = Buffer.from(\n      media.url.substring(media.url.indexOf(',') + 1),\n      'base64'\n    );\n    \n    const wavBase64 = await toWav(audioBuffer);\n\n    return {\n      audioDataUri: 'data:audio/wav;base64,' + wavBase64,\n    };\n  }\n);\n"],"names":[],"mappings":";;;;;AAGA;;;;;;CAMC,GAED;AACA;AAAA;AACA;;;;;;;AAEA,MAAM,0BAA0B,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAGpD,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtC,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACtC;AAGO,eAAe,aAAa,KAAwB;IACzD,OAAO,iBAAiB;AAC1B;AAEA,eAAe,MACb,OAAe,EACf,WAAW,CAAC,EACZ,OAAO,KAAK,EACZ,cAAc,CAAC;IAEf,OAAO,IAAI,QAAQ,CAAC,SAAS;QAC3B,MAAM,SAAS,IAAI,4HAAA,CAAA,UAAG,CAAC,MAAM,CAAC;YAC5B;YACA,YAAY;YACZ,UAAU,cAAc;QAC1B;QAEA,MAAM,OAAc,EAAE;QACtB,OAAO,EAAE,CAAC,SAAS;QACnB,OAAO,EAAE,CAAC,QAAQ,SAAU,CAAC;YAC3B,KAAK,IAAI,CAAC;QACZ;QACA,OAAO,EAAE,CAAC,OAAO;YACf,QAAQ,OAAO,MAAM,CAAC,MAAM,QAAQ,CAAC;QACvC;QAEA,OAAO,KAAK,CAAC;QACb,OAAO,GAAG;IACZ;AACF;AAEA,MAAM,mBAAmB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACpC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAO;IACL,iEAAiE;IACjE,IAAI,CAAC,QAAQ,KAAK,IAAI,OAAO,IAAI;QAC/B,OAAO;YACL,cAAc;QAChB;IACF;IAEA,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,mHAAA,CAAA,KAAE,CAAC,QAAQ,CAAC;QAClC,OAAO;QACP,QAAQ;YACN,oBAAoB;gBAAC;aAAQ;YAC7B,cAAc;gBACZ,aAAa;oBACX,qBAAqB;wBAAE,WAAW;oBAAU;gBAC9C;YACF;QACF;QACA,QAAQ;IACV;IAEA,IAAI,CAAC,OAAO;QACV,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,cAAc,OAAO,IAAI,CAC7B,MAAM,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,OAAO,CAAC,OAAO,IAC7C;IAGF,MAAM,YAAY,MAAM,MAAM;IAE9B,OAAO;QACL,cAAc,2BAA2B;IAC3C;AACF;;;IAxEoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 578, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/directions-service.ts"],"sourcesContent":["\n'use server';\n\nexport interface DirectionDetails {\n    distance: string;\n    duration: string;\n    durationInTraffic: string;\n    summary: string;\n    polyline: string;\n    trafficStatus: 'light' | 'moderate' | 'heavy';\n    bounds: {\n        northeast: { lat: number, lng: number };\n        southwest: { lat: number, lng: number };\n    },\n    junctions: number;\n}\n\nfunction getTrafficStatus(duration: number, durationInTraffic: number): 'light' | 'moderate' | 'heavy' {\n    const ratio = durationInTraffic / duration;\n    if (ratio < 1.2) return 'light';\n    if (ratio < 1.6) return 'moderate';\n    return 'heavy';\n}\n\nfunction countJunctions(steps: any[]): number {\n    if (!steps) return 0;\n    \n    const junctionManeuvers = [\n        'turn-sharp-left',\n        'turn-sharp-right',\n        'turn-slight-left',\n        'turn-slight-right',\n        'turn-left',\n        'turn-right',\n        'roundabout-left',\n        'roundabout-right',\n        'fork-left',\n        'fork-right',\n    ];\n\n    return steps.reduce((count, step) => {\n        if (step.maneuver && junctionManeuvers.includes(step.maneuver)) {\n            return count + 1;\n        }\n        return count;\n    }, 0);\n}\n\nexport async function getDirections(\n  origin: { lat: number; lng: number },\n  destination: { lat: number; lng: number }\n): Promise<{ success: boolean; data?: DirectionDetails, error?: string; }> {\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n  if (!apiKey) {\n    return { success: false, error: \"Google Maps API key is not configured on the server.\" };\n  }\n\n  const url = new URL('https://maps.googleapis.com/maps/api/directions/json');\n  url.searchParams.append('origin', `${origin.lat},${origin.lng}`);\n  url.searchParams.append('destination', `${destination.lat},${destination.lng}`);\n  url.searchParams.append('key', apiKey);\n  url.searchParams.append('departure_time', 'now');\n\n  try {\n    const response = await fetch(url.toString());\n    const data = await response.json();\n\n    if (data.status !== 'OK' || !data.routes || data.routes.length === 0) {\n      return { success: false, error: `Directions API error: ${data.status} - ${data.error_message || 'No routes found.'}` };\n    }\n\n    const route = data.routes[0];\n    const leg = route.legs[0];\n    \n    if (!leg.distance || !leg.duration || !leg.duration_in_traffic) {\n        return { success: false, error: 'Directions response missing required fields.'}\n    }\n    \n    const trafficStatus = getTrafficStatus(leg.duration.value, leg.duration_in_traffic.value);\n    const junctionCount = countJunctions(leg.steps);\n\n    const details: DirectionDetails = {\n      distance: leg.distance.text,\n      duration: leg.duration.text,\n      durationInTraffic: leg.duration_in_traffic.text,\n      summary: route.summary,\n      polyline: route.overview_polyline.points,\n      trafficStatus,\n      bounds: {\n        northeast: route.bounds.northeast,\n        southwest: route.bounds.southwest\n      },\n      junctions: junctionCount,\n    };\n\n    return { success: true, data: details };\n  } catch (e) {\n    console.error(\"Error fetching directions:\", e);\n    return { success: false, error: 'An unknown error occurred while fetching directions.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAiBA,SAAS,iBAAiB,QAAgB,EAAE,iBAAyB;IACjE,MAAM,QAAQ,oBAAoB;IAClC,IAAI,QAAQ,KAAK,OAAO;IACxB,IAAI,QAAQ,KAAK,OAAO;IACxB,OAAO;AACX;AAEA,SAAS,eAAe,KAAY;IAChC,IAAI,CAAC,OAAO,OAAO;IAEnB,MAAM,oBAAoB;QACtB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACH;IAED,OAAO,MAAM,MAAM,CAAC,CAAC,OAAO;QACxB,IAAI,KAAK,QAAQ,IAAI,kBAAkB,QAAQ,CAAC,KAAK,QAAQ,GAAG;YAC5D,OAAO,QAAQ;QACnB;QACA,OAAO;IACX,GAAG;AACP;AAEO,eAAe,cACpB,MAAoC,EACpC,WAAyC;IAEzC,MAAM;IACN,uCAAa;;IAEb;IAEA,MAAM,MAAM,IAAI,IAAI;IACpB,IAAI,YAAY,CAAC,MAAM,CAAC,UAAU,GAAG,OAAO,GAAG,CAAC,CAAC,EAAE,OAAO,GAAG,EAAE;IAC/D,IAAI,YAAY,CAAC,MAAM,CAAC,eAAe,GAAG,YAAY,GAAG,CAAC,CAAC,EAAE,YAAY,GAAG,EAAE;IAC9E,IAAI,YAAY,CAAC,MAAM,CAAC,OAAO;IAC/B,IAAI,YAAY,CAAC,MAAM,CAAC,kBAAkB;IAE1C,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,IAAI,QAAQ;QACzC,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,KAAK,MAAM,KAAK,QAAQ,CAAC,KAAK,MAAM,IAAI,KAAK,MAAM,CAAC,MAAM,KAAK,GAAG;YACpE,OAAO;gBAAE,SAAS;gBAAO,OAAO,CAAC,sBAAsB,EAAE,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,aAAa,IAAI,oBAAoB;YAAC;QACvH;QAEA,MAAM,QAAQ,KAAK,MAAM,CAAC,EAAE;QAC5B,MAAM,MAAM,MAAM,IAAI,CAAC,EAAE;QAEzB,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,IAAI,mBAAmB,EAAE;YAC5D,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAA8C;QAClF;QAEA,MAAM,gBAAgB,iBAAiB,IAAI,QAAQ,CAAC,KAAK,EAAE,IAAI,mBAAmB,CAAC,KAAK;QACxF,MAAM,gBAAgB,eAAe,IAAI,KAAK;QAE9C,MAAM,UAA4B;YAChC,UAAU,IAAI,QAAQ,CAAC,IAAI;YAC3B,UAAU,IAAI,QAAQ,CAAC,IAAI;YAC3B,mBAAmB,IAAI,mBAAmB,CAAC,IAAI;YAC/C,SAAS,MAAM,OAAO;YACtB,UAAU,MAAM,iBAAiB,CAAC,MAAM;YACxC;YACA,QAAQ;gBACN,WAAW,MAAM,MAAM,CAAC,SAAS;gBACjC,WAAW,MAAM,MAAM,CAAC,SAAS;YACnC;YACA,WAAW;QACb;QAEA,OAAO;YAAE,SAAS;YAAM,MAAM;QAAQ;IACxC,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;YAAE,SAAS;YAAO,OAAO;QAAuD;IACzF;AACF;;;IApDsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 678, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/route-alerts/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getIncidents as '0036f4f9175b9166298ecf81f230471c932f9b8d35'} from 'ACTIONS_MODULE0'\nexport {generateRouteAlert as '4072c9be27302b19f5423814dd95b4bd259d9e1837'} from 'ACTIONS_MODULE1'\nexport {textToSpeech as '40e2e3b5fceeb54cd86f33dbf817153adeb8a6e950'} from 'ACTIONS_MODULE2'\nexport {getDirections as '605c475562d35e360b80be5744d708475ce6db66b6'} from 'ACTIONS_MODULE3'\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 748, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/route-alerts/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/route-alerts/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/route-alerts/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA","debugId":null}},
    {"offset": {"line": 762, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/route-alerts/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/route-alerts/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/route-alerts/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6Q,GAC1S,2CACA","debugId":null}},
    {"offset": {"line": 776, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}