{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/analyze-incident-report.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A flow to analyze incident reports based on media and description.\n *\n * - analyzeIncidentReport - A function that handles the incident analysis process.\n * - AnalyzeIncidentReportInput - The input type for the analyzeIncidentReport function.\n * - AnalyzeIncidentReportOutput - The return type for the analyzeIncidentReport function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst AnalyzeIncidentReportInputSchema = z.object({\n  mediaDataUri: z\n    .string()\n    .describe(\n      \"A photo or video of the incident, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n  description: z.string().describe('The description of the incident.'),\n  location: z.object({\n    latitude: z.number().describe('Latitude of the incident location.'),\n    longitude: z.number().describe('Longitude of the incident location.'),\n  }).describe('The location of the incident.'),\n});\nexport type AnalyzeIncidentReportInput = z.infer<typeof AnalyzeIncidentReportInputSchema>;\n\nconst AnalyzeIncidentReportOutputSchema = z.object({\n  incidentCategory: z.string().describe('The category of the incident.'),\n  severity: z.enum(['Low', 'Medium', 'High']).describe('The severity of the incident.'),\n  summaryReport: z.string().describe('A summary report of the incident.'),\n});\nexport type AnalyzeIncidentReportOutput = z.infer<typeof AnalyzeIncidentReportOutputSchema>;\n\nexport async function analyzeIncidentReport(input: AnalyzeIncidentReportInput): Promise<AnalyzeIncidentReportOutput> {\n  return analyzeIncidentReportFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'analyzeIncidentReportPrompt',\n  input: {schema: AnalyzeIncidentReportInputSchema},\n  output: {schema: AnalyzeIncidentReportOutputSchema},\n  prompt: `You are an AI assistant designed to analyze incident reports. Your task is to categorize the incident, determine its severity, and provide a summary based on the provided media, description, and location.\n\n  **Incident Information:**\n  - **Description:** {{{description}}}\n  - **Location:** Latitude: {{{location.latitude}}}, Longitude: {{{location.longitude}}}\n  - **Media:** {{media url=mediaDataUri}}\n\n  **Analysis Tasks:**\n\n  1.  **Categorize the Incident:** Classify the incident into one of the following categories:\n      *   Road Accidents\n      *   Fire Accidents\n      *   Electrical Issues\n      *   Water Logging\n      *   Drainage/Fallen Tree\n      *   Road Blockages\n      *   Construction Zones\n      *   Other\n\n  2.  **Determine Severity:** Assess the severity of the incident as 'Low', 'Medium', or 'High' based on the visual evidence and description. Consider factors like potential danger, impact on public, and scale of the event.\n\n  3.  **Generate Summary:** Write a concise summary of the incident. The summary should be a factual depiction of what is happening.\n\n  Provide the output in the requested structured format.\n\n  {{ zodToJsonSchema output }}`,\n});\n\nconst analyzeIncidentReportFlow = ai.defineFlow(\n  {\n    name: 'analyzeIncidentReportFlow',\n    inputSchema: AnalyzeIncidentReportInputSchema,\n    outputSchema: AnalyzeIncidentReportOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,mCAAmC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,cAAc,uIAAA,CAAA,IAAC,CACZ,MAAM,GACN,QAAQ,CACP;IAEJ,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACjB,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC9B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,GAAG,QAAQ,CAAC;AACd;AAGA,MAAM,oCAAoC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,kBAAkB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACtC,UAAU,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAO;QAAU;KAAO,EAAE,QAAQ,CAAC;IACrD,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACrC;AAGO,eAAe,sBAAsB,KAAiC;IAC3E,OAAO,0BAA0B;AACnC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAgC;IAChD,QAAQ;QAAC,QAAQ;IAAiC;IAClD,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;8BAyBmB,CAAC;AAC/B;AAEA,MAAM,4BAA4B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC7C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA7CoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/report-incident/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {analyzeIncidentReport as '40e0294e05261dd6706fd823407cb45d146f165eb9'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/report-incident-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ReportIncidentForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReportIncidentForm() from the server but ReportIncidentForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/report-incident-form.tsx <module evaluation>\",\n    \"ReportIncidentForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,yEACA","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/report-incident-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ReportIncidentForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReportIncidentForm() from the server but ReportIncidentForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/report-incident-form.tsx\",\n    \"ReportIncidentForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,qDACA","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/report-incident/page.tsx"],"sourcesContent":["import { ReportIncidentForm } from '@/components/report-incident-form';\n\nexport default function ReportIncidentPage() {\n  return (\n    <div className=\"bg-background min-h-screen\">\n      <main className=\"container mx-auto px-4 py-8 md:py-16\">\n        <header className=\"text-center mb-12\">\n          <h1 className=\"text-4xl sm:text-5xl font-bold font-headline text-primary\">Report an Incident</h1>\n          <p className=\"mt-4 text-lg text-muted-foreground\">Fill out the form below to submit an incident report.</p>\n        </header>\n        <ReportIncidentForm />\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAK,WAAU;;8BACd,8OAAC;oBAAO,WAAU;;sCAChB,8OAAC;4BAAG,WAAU;sCAA4D;;;;;;sCAC1E,8OAAC;4BAAE,WAAU;sCAAqC;;;;;;;;;;;;8BAEpD,8OAAC,gJAAA,CAAA,qBAAkB;;;;;;;;;;;;;;;;AAI3B","debugId":null}}]
}