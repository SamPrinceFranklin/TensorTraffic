{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/custom-map-pin.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { LucideProps } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface CustomMapPinProps {\n  icon: React.ElementType<LucideProps>;\n  className?: string;\n}\n\nexport function CustomMapPin({ icon: Icon, className }: CustomMapPinProps) {\n  return (\n    <div\n      className={cn(\n        'w-8 h-8 rounded-full bg-background border-2 border-foreground flex items-center justify-center shadow-md',\n        className\n      )}\n    >\n      <Icon className={cn('w-5 h-5 text-foreground', className)} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAIA;AAJA;;;AAWO,SAAS,aAAa,EAAE,MAAM,IAAI,EAAE,SAAS,EAAqB;IACvE,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4GACA;kBAGF,cAAA,8OAAC;YAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2BAA2B;;;;;;;;;;;AAGrD","debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/map.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useMemo, useEffect, useCallback, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, OverlayView, TrafficLayer, Polyline } from '@react-google-maps/api';\nimport { CustomMapPin } from './custom-map-pin';\nimport { Droplets, Car, PowerOff, AlertTriangle, Construction, TreeDeciduous, TrafficCone, Home, School } from 'lucide-react';\nimport { Incident } from '@/lib/types';\n\nconst defaultContainerStyle = {\n  width: '100%',\n  height: '100%',\n  borderRadius: '0.5rem',\n};\n\nconst defaultCenter = {\n  lat: 37.7749,\n  lng: -122.4194,\n};\n\nconst getPixelPositionOffset = (width: number, height: number) => ({\n  x: -(width / 2),\n  y: -(height / 2),\n});\n\nconst categoryStyles: { [key: string]: { icon: React.ElementType; className: string } } = {\n    'Water Logging': { icon: Droplets, className: 'bg-blue-100 border-blue-500 text-blue-500' },\n    'Road Accidents': { icon: Car, className: 'bg-red-100 border-red-500 text-red-500' },\n    'Accident': { icon: Car, className: 'bg-red-100 border-red-500 text-red-500' },\n    'Fire Accidents': { icon: TrafficCone, className: 'bg-orange-100 border-orange-500 text-orange-500' },\n    'Electrical Issues': { icon: PowerOff, className: 'bg-yellow-100 border-yellow-500 text-yellow-500' },\n    'PowerCut': { icon: PowerOff, className: 'bg-yellow-100 border-yellow-500 text-yellow-500' },\n    'Drainage/Fallen Tree': { icon: TreeDeciduous, className: 'bg-green-100 border-green-500 text-green-500' },\n    'Road Blockages': { icon: TrafficCone, className: 'bg-gray-100 border-gray-500 text-gray-500' },\n    'Construction Zones': { icon: Construction, className: 'bg-indigo-100 border-indigo-500 text-indigo-500' },\n    'Home': { icon: Home, className: 'bg-green-100 border-green-500 text-green-500' },\n    'School': { icon: School, className: 'bg-blue-100 border-blue-500 text-blue-500' },\n    'Other': { icon: AlertTriangle, className: 'bg-purple-100 border-purple-500 text-purple-500' },\n};\n\ninterface MapComponentProps {\n  incidents: Incident[];\n  onPinClick: (incident: Incident) => void;\n  onMapClick?: (e: google.maps.MapMouseEvent) => void;\n  onMapLoad?: (isLoaded: boolean) => void;\n  center?: { lat: number; lng: number };\n  zoom?: number;\n  containerStyle?: React.CSSProperties;\n  showTraffic?: boolean;\n  routePolyline?: string;\n  aqiHeatmap?: boolean;\n}\n\nexport function MapComponent({ \n  incidents,\n  onPinClick,\n  onMapClick,\n  onMapLoad,\n  center = defaultCenter,\n  zoom = 12,\n  containerStyle = defaultContainerStyle,\n  showTraffic = false,\n  routePolyline,\n  aqiHeatmap = false\n}: MapComponentProps) {\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n  const [mapInstance, setMapInstance] = useState<google.maps.Map | null>(null);\n\n  const { isLoaded, loadError } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: apiKey || '',\n    libraries: ['places', 'routes', 'geometry'],\n  });\n\n  const handleMapLoad = useCallback((map: google.maps.Map) => {\n    setMapInstance(map);\n    if (onMapLoad) {\n      onMapLoad(true);\n    }\n  }, [onMapLoad]);\n  \n  useEffect(() => {\n    if(onMapLoad) onMapLoad(isLoaded);\n  }, [isLoaded, onMapLoad]);\n  \n  const decodedPath = useMemo(() => {\n    if (isLoaded && routePolyline && window.google?.maps?.geometry?.encoding) {\n        return window.google.maps.geometry.encoding.decodePath(routePolyline);\n    }\n    return [];\n  }, [isLoaded, routePolyline]);\n\n  useEffect(() => {\n    if (mapInstance && isLoaded) {\n      // Always clear existing overlays before adding new ones\n      mapInstance.overlayMapTypes.clear();\n\n      if (aqiHeatmap) {\n        const aqiTileLayer = new google.maps.ImageMapType({\n          getTileUrl: function(coord, zoom) {\n            const url = `https://airquality.googleapis.com/v1/mapTypes/UAQI_RED_GREEN/heatmapTiles/${zoom}/${coord.x}/${coord.y}?key=${apiKey}`;\n            return url;\n          },\n          tileSize: new google.maps.Size(256, 256),\n          name: 'AQI Heatmap'\n        });\n        mapInstance.overlayMapTypes.insertAt(0, aqiTileLayer);\n      }\n    }\n     // Cleanup function to run when component unmounts or dependencies change\n    return () => {\n      if (mapInstance) {\n        mapInstance.overlayMapTypes.clear();\n      }\n    };\n  }, [mapInstance, isLoaded, aqiHeatmap, apiKey]);\n\n\n  if (loadError) {\n    return (\n      <div className=\"flex items-center justify-center h-full bg-muted rounded-lg\">\n        <p className=\"text-destructive\">\n          Error loading maps.\n        </p>\n      </div>\n    );\n  }\n\n  if (!isLoaded) {\n    return (\n       <div className=\"flex items-center justify-center h-full bg-muted rounded-lg\">\n        <p>Loading Map...</p>\n      </div>\n    );\n  }\n\n  if (!apiKey) {\n    return (\n      <div className=\"flex items-center justify-center h-full bg-muted rounded-lg\">\n        <p className=\"text-destructive\">\n          Google Maps API key is missing. Please add it to your .env file.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={zoom} onClick={onMapClick} onLoad={handleMapLoad}>\n      {incidents.map(incident => {\n          const style = categoryStyles[incident.category] || categoryStyles['Other'];\n          if (!style) return null;\n          return (\n            <OverlayView\n              key={incident.id}\n              position={{ lat: incident.location.latitude, lng: incident.location.longitude }}\n              mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n              getPixelPositionOffset={getPixelPositionOffset}\n            >\n              <div onClick={() => onPinClick(incident)} style={{cursor: 'pointer'}}>\n                <CustomMapPin icon={style.icon} className={style.className} />\n              </div>\n            </OverlayView>\n          )\n      })}\n      {showTraffic && <TrafficLayer autoUpdate />}\n      {decodedPath.length > 0 && (\n        <Polyline\n            path={decodedPath}\n            options={{\n                strokeColor: '#FF0000',\n                strokeOpacity: 0.8,\n                strokeWeight: 4,\n            }}\n        />\n      )}\n    </GoogleMap>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/incidents-service.ts"],"sourcesContent":["'use server';\n\nimport { db } from '@/lib/firebase';\nimport { collection, addDoc, getDocs, serverTimestamp, Timestamp } from \"firebase/firestore\";\nimport { Incident } from '@/lib/types';\n\nexport interface IncidentData {\n    location: {\n        latitude: number;\n        longitude: number;\n    };\n    category: string;\n    severity: string;\n    summary: string;\n}\n\nexport async function saveIncidentReport(incidentData: IncidentData) {\n    try {\n        const docRef = await addDoc(collection(db, \"incidents\"), {\n            location: incidentData.location,\n            category: incidentData.category,\n            severity: incidentData.severity,\n            summary: incidentData.summary,\n            timestamp: serverTimestamp(),\n        });\n        console.log(\"Document written with ID: \", docRef.id);\n        return { success: true, id: docRef.id };\n    } catch (e) {\n        console.error(\"Error adding document: \", e);\n        if (e instanceof Error) {\n            if (e.message.includes('PERMISSION_DENIED')) {\n                 return { success: false, error: 'Permission Denied. Please check your Firestore security rules in the Firebase Console. This is a common issue and is required for the app to save data.' };\n            }\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'An unknown error occurred while saving the incident report.' };\n    }\n}\n\nexport async function getIncidents() {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'incidents'));\n    const incidents: Incident[] = querySnapshot.docs.map(doc => {\n      const data = doc.data();\n      const timestamp = data.timestamp as Timestamp;\n      \n      return {\n        id: doc.id,\n        location: {\n          latitude: data.location.latitude,\n          longitude: data.location.longitude,\n        },\n        category: data.category,\n        severity: data.severity,\n        summary: data.summary,\n        timestamp: timestamp.toDate().toISOString(),\n      };\n    });\n    return { success: true, data: incidents };\n  } catch (e) {\n    console.error(\"Error getting documents: \", e);\n    if (e instanceof Error) {\n      if (e.message.includes('PERMISSION_DENIED')) {\n        return { success: false, error: 'Permission Denied. Could not retrieve incidents. Please check your Firestore security rules.' };\n      }\n      return { success: false, error: e.message };\n    }\n    return { success: false, error: 'An unknown error occurred while fetching incidents.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAuCsB,eAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 448, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-route-alert-flow.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A flow to analyze incidents along a route and generate a summary alert.\n *\n * - generateRouteAlert - A function that handles the route alert generation process.\n * - GenerateRouteAlertInput - The input type for the generateRouteAlert function.\n * - GenerateRouteAlertOutput - The return type for the generateRouteAlert function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\n\nconst IncidentSchema = z.object({\n  id: z.string(),\n  location: z.object({\n    latitude: z.number(),\n    longitude: z.number(),\n  }),\n  category: z.string(),\n  severity: z.string(),\n  summary: z.string(),\n  timestamp: z.string(),\n});\n\nconst GenerateRouteAlertInputSchema = z.object({\n  incidents: z.array(IncidentSchema).describe('A list of incidents detected along the user\\'s planned route.'),\n  fromAddress: z.string().describe('The starting address of the route.'),\n  toAddress: z.string().describe('The destination address of the route.'),\n  nextIncidentDistance: z.string().optional().describe('The estimated travel distance to the very next incident on the route.'),\n});\nexport type GenerateRouteAlertInput = z.infer<typeof GenerateRouteAlertInputSchema>;\n\nconst GenerateRouteAlertOutputSchema = z.object({\n  alertSummary: z.string().describe('A very short, concise, and direct summary of the key incidents on the route to be used for a voice alert. Mention the most severe issues first.'),\n  detailedAlerts: z.array(z.object({\n      incidentId: z.string(),\n      category: z.string(),\n      severity: z.string(),\n      summary: z.string(),\n  })).describe('A list of the individual alerts for the UI.'),\n});\nexport type GenerateRouteAlertOutput = z.infer<typeof GenerateRouteAlertOutputSchema>;\n\nexport async function generateRouteAlert(input: GenerateRouteAlertInput): Promise<GenerateRouteAlertOutput> {\n  return generateRouteAlertFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateRouteAlertPrompt',\n  input: { schema: GenerateRouteAlertInputSchema },\n  output: { schema: GenerateRouteAlertOutputSchema },\n  prompt: `You are a traffic alert system AI. Your task is to provide a very brief voice alert summary and a detailed list of incidents for a user's route from \"{{fromAddress}}\" to \"{{toAddress}}\".\n\nIncidents on route:\n{{#each incidents}}\n- **ID:** {{id}}\n- **Category:** {{category}}\n- **Severity:** {{severity}}\n- **Summary:** {{summary}}\n{{/each}}\n\n{{#if nextIncidentDistance}}\nThe next incident is about {{nextIncidentDistance}} away.\n{{/if}}\n\n**Tasks:**\n\n1.  **Generate Voice Summary:** Create a single, short sentence summarizing the most critical issues on the route. This will be read aloud. Start with \"Alert:\" and be direct. If available, mention the distance to the next incident. For example: \"Alert: There is an accident reported in about 2 miles, plus other incidents ahead.\" or \"Alert: There is heavy traffic due to an accident on Main Street and reported water logging ahead.\" If there are no major issues, say \"Alert: The route ahead is currently clear.\".\n2.  **Create Detailed List:** Create a list of all the incidents provided in the input for display in the UI.\n\nProvide the output in the structured format requested.\n`,\n});\n\nconst generateRouteAlertFlow = ai.defineFlow(\n  {\n    name: 'generateRouteAlertFlow',\n    inputSchema: GenerateRouteAlertInputSchema,\n    outputSchema: GenerateRouteAlertOutputSchema,\n  },\n  async (input) => {\n    const { output } = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IA4CsB,qBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/text-to-speech-flow.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview A flow to convert text to speech using Google's TTS model.\n *\n * - textToSpeech - A function that handles the text-to-speech conversion.\n * - TextToSpeechInput - The input type for the textToSpeech function.\n * - TextToSpeechOutput - The return type for the textToSpeech function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport wav from 'wav';\n\nconst TextToSpeechInputSchema = z.string().describe('The text to be converted to speech.');\nexport type TextToSpeechInput = z.infer<typeof TextToSpeechInputSchema>;\n\nconst TextToSpeechOutputSchema = z.object({\n    audioDataUri: z.string().describe(\"The generated audio as a data URI. Expected format: 'data:audio/wav;base64,<encoded_data>'.\"),\n});\nexport type TextToSpeechOutput = z.infer<typeof TextToSpeechOutputSchema>;\n\nexport async function textToSpeech(input: TextToSpeechInput): Promise<TextToSpeechOutput> {\n  return textToSpeechFlow(input);\n}\n\nasync function toWav(\n  pcmData: Buffer,\n  channels = 1,\n  rate = 24000,\n  sampleWidth = 2\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const writer = new wav.Writer({\n      channels,\n      sampleRate: rate,\n      bitDepth: sampleWidth * 8,\n    });\n\n    const bufs: any[] = [];\n    writer.on('error', reject);\n    writer.on('data', function (d) {\n      bufs.push(d);\n    });\n    writer.on('end', function () {\n      resolve(Buffer.concat(bufs).toString('base64'));\n    });\n\n    writer.write(pcmData);\n    writer.end();\n  });\n}\n\nconst textToSpeechFlow = ai.defineFlow(\n  {\n    name: 'textToSpeechFlow',\n    inputSchema: TextToSpeechInputSchema,\n    outputSchema: TextToSpeechOutputSchema,\n  },\n  async (text) => {\n    // Handle empty or whitespace-only strings to prevent TTS errors.\n    if (!text || text.trim() === '') {\n      return {\n        audioDataUri: 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA', // Empty WAV file\n      };\n    }\n\n    const { media } = await ai.generate({\n      model: 'googleai/gemini-2.5-flash-preview-tts',\n      config: {\n        responseModalities: ['AUDIO'],\n        speechConfig: {\n          voiceConfig: {\n            prebuiltVoiceConfig: { voiceName: 'Algenib' },\n          },\n        },\n      },\n      prompt: text,\n    });\n\n    if (!media) {\n      throw new Error('No media was returned from the TTS model.');\n    }\n\n    const audioBuffer = Buffer.from(\n      media.url.substring(media.url.indexOf(',') + 1),\n      'base64'\n    );\n    \n    const wavBase64 = await toWav(audioBuffer);\n\n    return {\n      audioDataUri: 'data:audio/wav;base64,' + wavBase64,\n    };\n  }\n);\n"],"names":[],"mappings":";;;;;;IAuBsB,eAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/directions-service.ts"],"sourcesContent":["\n'use server';\n\nexport interface DirectionDetails {\n    distance: string;\n    duration: string;\n    durationInTraffic: string;\n    summary: string;\n    polyline: string;\n    trafficStatus: 'light' | 'moderate' | 'heavy';\n    bounds: {\n        northeast: { lat: number, lng: number };\n        southwest: { lat: number, lng: number };\n    },\n    junctions: number;\n}\n\nfunction getTrafficStatus(duration: number, durationInTraffic: number): 'light' | 'moderate' | 'heavy' {\n    const ratio = durationInTraffic / duration;\n    if (ratio < 1.2) return 'light';\n    if (ratio < 1.6) return 'moderate';\n    return 'heavy';\n}\n\nfunction countJunctions(steps: any[]): number {\n    if (!steps) return 0;\n    \n    const junctionManeuvers = [\n        'turn-sharp-left',\n        'turn-sharp-right',\n        'turn-slight-left',\n        'turn-slight-right',\n        'turn-left',\n        'turn-right',\n        'roundabout-left',\n        'roundabout-right',\n        'fork-left',\n        'fork-right',\n    ];\n\n    return steps.reduce((count, step) => {\n        if (step.maneuver && junctionManeuvers.includes(step.maneuver)) {\n            return count + 1;\n        }\n        return count;\n    }, 0);\n}\n\nexport async function getDirections(\n  origin: { lat: number; lng: number },\n  destination: { lat: number; lng: number }\n): Promise<{ success: boolean; data?: DirectionDetails, error?: string; }> {\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n  if (!apiKey) {\n    return { success: false, error: \"Google Maps API key is not configured on the server.\" };\n  }\n\n  const url = new URL('https://maps.googleapis.com/maps/api/directions/json');\n  url.searchParams.append('origin', `${origin.lat},${origin.lng}`);\n  url.searchParams.append('destination', `${destination.lat},${destination.lng}`);\n  url.searchParams.append('key', apiKey);\n  url.searchParams.append('departure_time', 'now');\n\n  try {\n    const response = await fetch(url.toString());\n    const data = await response.json();\n\n    if (data.status !== 'OK' || !data.routes || data.routes.length === 0) {\n      return { success: false, error: `Directions API error: ${data.status} - ${data.error_message || 'No routes found.'}` };\n    }\n\n    const route = data.routes[0];\n    const leg = route.legs[0];\n    \n    if (!leg.distance || !leg.duration || !leg.duration_in_traffic) {\n        return { success: false, error: 'Directions response missing required fields.'}\n    }\n    \n    const trafficStatus = getTrafficStatus(leg.duration.value, leg.duration_in_traffic.value);\n    const junctionCount = countJunctions(leg.steps);\n\n    const details: DirectionDetails = {\n      distance: leg.distance.text,\n      duration: leg.duration.text,\n      durationInTraffic: leg.duration_in_traffic.text,\n      summary: route.summary,\n      polyline: route.overview_polyline.points,\n      trafficStatus,\n      bounds: {\n        northeast: route.bounds.northeast,\n        southwest: route.bounds.southwest\n      },\n      junctions: junctionCount,\n    };\n\n    return { success: true, data: details };\n  } catch (e) {\n    console.error(\"Error fetching directions:\", e);\n    return { success: false, error: 'An unknown error occurred while fetching directions.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAgDsB,gBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 487, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLSpanElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <span className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n\n    "],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAEzE","debugId":null}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toggle-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleGroupVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3\",\n        sm: \"h-9 px-2.5\",\n        lg: \"h-11 px-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleGroupVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleGroupVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleGroupVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleGroupVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,sBAAsB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EAC5B,oXACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,SACE;QACJ;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;QACN;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,MAAM,mCAAqB,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EAE3C;IACA,MAAM;IACN,SAAS;AACX;AAEA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAIjC,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACnD,8OAAC,2KAAA,CAAA,OAAyB;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;kBAET,cAAA,8OAAC,mBAAmB,QAAQ;YAAC,OAAO;gBAAE;gBAAS;YAAK;sBACjD;;;;;;;;;;;AAKP,YAAY,WAAW,GAAG,2KAAA,CAAA,OAAyB,CAAC,WAAW;AAE/D,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAIrC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IACnD,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE;IAEjC,qBACE,8OAAC,2KAAA,CAAA,OAAyB;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oBAAoB;YAClB,SAAS,QAAQ,OAAO,IAAI;YAC5B,MAAM,QAAQ,IAAI,IAAI;QACxB,IACA;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;AAEA,gBAAgB,WAAW,GAAG,2KAAA,CAAA,OAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 610, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/route-alerts/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { MapComponent } from '@/components/map';\nimport { getIncidents } from '@/lib/incidents-service';\nimport { Incident } from '@/lib/types';\nimport { useToast } from '@/hooks/use-toast';\nimport { LoaderCircle, MapPin, Bot, Volume2, Route, Flag, Pin, AlertTriangle, GitCommitHorizontal } from 'lucide-react';\nimport { generateRouteAlert, GenerateRouteAlertOutput } from '@/ai/flows/generate-route-alert-flow';\nimport { textToSpeech } from '@/ai/flows/text-to-speech-flow';\nimport { getDirections } from '@/lib/directions-service';\nimport { Badge } from '@/components/ui/badge';\nimport { ToggleGroup, ToggleGroupItem } from '@/components/ui/toggle-group';\nimport { getPlaceDetails } from '@/lib/places-service';\n\ntype Location = { lat: number; lng: number, address?: string };\ntype AlertResult = GenerateRouteAlertOutput['detailedAlerts'][0] & { distance?: string };\ntype NextIncidentInfo = { incident: Incident, distance: string } | null;\n\n\nexport default function RouteAlertsPage() {\n  const [allIncidents, setAllIncidents] = useState<Incident[]>([]);\n  const [startLocation, setStartLocation] = useState<Location | null>(null);\n  const [endLocation, setEndLocation] = useState<Location | null>(null);\n  const [selectionMode, setSelectionMode] = useState<'start' | 'end'>('start');\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  \n  const [routePolyline, setRoutePolyline] = useState<string | undefined>(undefined);\n  const [junctionCount, setJunctionCount] = useState<number | null>(null);\n  const [alertSummary, setAlertSummary] = useState<string | null>(null);\n  const [alertDetails, setAlertDetails] = useState<AlertResult[]>([]);\n  const [incidentsOnRoute, setIncidentsOnRoute] = useState<Incident[]>([]);\n  const [audioDataUri, setAudioDataUri] = useState<string | null>(null);\n  const [nextIncidentInfo, setNextIncidentInfo] = useState<NextIncidentInfo>(null);\n\n  const { toast } = useToast();\n\n  useEffect(() => {\n    const fetchIncidents = async () => {\n      const result = await getIncidents();\n      if (result.success && result.data) {\n        setAllIncidents(result.data);\n      } else {\n        toast({\n          variant: 'destructive',\n          title: 'Failed to load incidents',\n          description: result.error || 'Could not fetch incidents from the server.',\n        });\n      }\n    };\n    fetchIncidents();\n  }, [toast]);\n  \n  const mapCenter = useMemo(() => {\n    if (startLocation && endLocation) {\n      return {\n        lat: (startLocation.lat + endLocation.lat) / 2,\n        lng: (startLocation.lng + endLocation.lng) / 2,\n      };\n    }\n    return startLocation || endLocation || { lat: 37.7749, lng: -122.4194 };\n  }, [startLocation, endLocation]);\n\n  const mapZoom = useMemo(() => {\n     if (startLocation && endLocation) return 12;\n     return 10;\n  }, [startLocation, endLocation])\n\n  const mapPins = useMemo(() => {\n    const pins: Incident[] = [...incidentsOnRoute];\n    if(startLocation) {\n        pins.push({ id: 'start', location: { latitude: startLocation.lat, longitude: startLocation.lng }, category: 'Home', severity: 'Low', summary: startLocation.address || 'Start', timestamp: ''})\n    }\n    if(endLocation) {\n        pins.push({ id: 'end', location: { latitude: endLocation.lat, longitude: endLocation.lng }, category: 'School', severity: 'Low', summary: endLocation.address || \"Destination\", timestamp: ''})\n    }\n    return pins;\n  }, [startLocation, endLocation, incidentsOnRoute])\n\n  const handleMapClick = async (e: google.maps.MapMouseEvent) => {\n    if (!isMapLoaded) {\n      toast({\n        variant: 'destructive',\n        title: 'Map not ready',\n        description: 'Please wait for the map to finish loading before selecting points.',\n      });\n      return;\n    }\n    if (e.latLng) {\n      const location = {\n        lat: e.latLng.lat(),\n        lng: e.latLng.lng(),\n      };\n      \n      const geocoder = new google.maps.Geocoder();\n      const response = await geocoder.geocode({ location });\n      const address = response.results[0]?.formatted_address || `${location.lat.toFixed(5)}, ${location.lng.toFixed(5)}`;\n\n      if (selectionMode === 'start') {\n        setStartLocation({...location, address});\n        setSelectionMode('end');\n      } else {\n        setEndLocation({...location, address});\n      }\n    }\n  };\n  \n  const resetAnalysis = () => {\n      setAlertSummary(null);\n      setAlertDetails([]);\n      setAudioDataUri(null);\n      setRoutePolyline(undefined);\n      setIncidentsOnRoute([]);\n      setNextIncidentInfo(null);\n      setJunctionCount(null);\n  }\n  \n  const isIncidentOnRoute = (incident: Incident, polyline: google.maps.LatLng[], radius: number) => {\n      if (!window.google?.maps?.geometry?.poly) {\n        return false;\n      }\n      const incidentLatLng = new google.maps.LatLng(incident.location.latitude, incident.location.longitude);\n      return google.maps.geometry.poly.isLocationOnEdge(incidentLatLng, new google.maps.Polyline({ path: polyline }), radius / 100000);\n  }\n\n  const handleAnalyzeRoute = async () => {\n    if (!startLocation || !endLocation) {\n      toast({ variant: \"destructive\", title: \"Please select start and end locations.\" });\n      return;\n    }\n    \n    if (typeof window.google?.maps?.geometry?.poly?.isLocationOnEdge !== 'function') {\n        toast({ variant: 'destructive', title: 'Map service not available', description: 'Google Maps libraries are not fully loaded yet. Please try again in a moment.' });\n        return;\n    }\n\n    setIsAnalyzing(true);\n    resetAnalysis();\n    \n    try {\n      const directionsResult = await getDirections(startLocation, endLocation);\n      if (!directionsResult.success || !directionsResult.data) {\n        throw new Error(directionsResult.error || 'Could not get directions.');\n      }\n      const route = directionsResult.data;\n      setRoutePolyline(route.polyline);\n      setJunctionCount(route.junctions);\n\n      // Fetch incidents within the route's bounding box for efficiency\n      const incidentsResult = await getIncidents();\n      if (!incidentsResult.success || !incidentsResult.data) {\n        throw new Error(incidentsResult.error || 'Could not fetch incidents.');\n      }\n\n      const decodedPath = google.maps.geometry.encoding.decodePath(route.polyline);\n      const relevantIncidents = incidentsResult.data.filter(incident => \n        isIncidentOnRoute(incident, decodedPath, 300) // 300 meter radius\n      );\n      setIncidentsOnRoute(relevantIncidents);\n\n      if (relevantIncidents.length === 0) {\n        setAlertSummary('No incidents found on your route. Drive safely!');\n        const ttsResult = await textToSpeech('No incidents found on your route. Drive safely!');\n        setAudioDataUri(ttsResult.audioDataUri);\n        return;\n      }\n\n      // Find distance to each incident and identify the next one\n      let closestIncident: NextIncidentInfo = null;\n      const incidentDistances: {incident: Incident, distance: number}[] = [];\n\n      for (const incident of relevantIncidents) {\n          const incidentLoc = { lat: incident.location.latitude, lng: incident.location.longitude };\n          const distResult = await getDirections(startLocation, incidentLoc);\n          if (distResult.success && distResult.data) {\n              const distanceInMeters = parseFloat(distResult.data.distance.replace(/[^0-9.]/g, '')) * (distResult.data.distance.includes('km') ? 1000 : 1);\n              incidentDistances.push({incident, distance: distanceInMeters});\n          }\n      }\n\n      if (incidentDistances.length > 0) {\n        incidentDistances.sort((a, b) => a.distance - b.distance);\n        const nextIncident = incidentDistances[0];\n        \n        const distResult = await getDirections(startLocation, {lat: nextIncident.incident.location.latitude, lng: nextIncident.incident.location.longitude});\n        if(distResult.success && distResult.data){\n            closestIncident = { incident: nextIncident.incident, distance: distResult.data.distance };\n            setNextIncidentInfo(closestIncident);\n        }\n      }\n\n      const alertResult = await generateRouteAlert({\n        incidents: relevantIncidents,\n        fromAddress: startLocation.address || 'start point',\n        toAddress: endLocation.address || 'end point',\n        nextIncidentDistance: closestIncident?.distance\n      });\n\n      setAlertSummary(alertResult.alertSummary);\n      setAlertDetails(alertResult.detailedAlerts);\n      \n      const ttsResult = await textToSpeech(alertResult.alertSummary);\n      setAudioDataUri(ttsResult.audioDataUri);\n\n    } catch (e: any) {\n        console.error(\"Error analyzing route: \", e);\n        toast({ variant: \"destructive\", title: \"Failed to Analyze Route\", description: e.message });\n    } finally {\n        setIsAnalyzing(false);\n    }\n  };\n\n  const playAudio = () => {\n      if (audioDataUri) {\n          const audio = new Audio(audioDataUri);\n          audio.play();\n      }\n  }\n\n  return (\n    <div className=\"bg-background min-h-screen\">\n      <main className=\"container mx-auto px-4 py-8 md:py-16\">\n        <header className=\"text-center mb-8\">\n          <h1 className=\"text-4xl sm:text-5xl font-bold font-headline text-primary flex items-center justify-center gap-3\">\n            <Route className=\"w-12 h-12\" /> Route Alerts\n          </h1>\n          <p className=\"mt-4 text-lg text-muted-foreground\">\n            Click on the map to select your start and end points, then get AI-powered alerts for your route.\n          </p>\n        </header>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <div className=\"md:col-span-1 space-y-6\">\n                <Card>\n                    <CardHeader>\n                        <CardTitle>Selection Mode</CardTitle>\n                        <CardDescription>Choose which point to set on the map.</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                        <ToggleGroup type=\"single\" value={selectionMode} onValueChange={(value) => { if (value) setSelectionMode(value as 'start' | 'end')}} className=\"w-full\">\n                            <ToggleGroupItem value=\"start\" className=\"w-1/2\">\n                                <Flag className=\"w-4 h-4 mr-2\" /> Start\n                            </ToggleGroupItem>\n                            <ToggleGroupItem value=\"end\" className=\"w-1/2\">\n                                <Pin className=\"w-4 h-4 mr-2\" /> Destination\n                            </ToggleGroupItem>\n                        </ToggleGroup>\n                    </CardContent>\n                </Card>\n\n                <Card>\n                    <CardHeader>\n                        <CardTitle>Selected Locations</CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"space-y-4\">\n                        <div className=\"flex items-start gap-3\">\n                            <Flag className=\"w-5 h-5 text-green-500 mt-1\" />\n                            <div>\n                                <p className=\"font-semibold\">Start Point</p>\n                                <p className=\"text-sm text-muted-foreground\">{startLocation?.address || \"Click map to select\"}</p>\n                            </div>\n                        </div>\n                         <div className=\"flex items-start gap-3\">\n                            <Pin className=\"w-5 h-5 text-red-500 mt-1\" />\n                            <div>\n                                <p className=\"font-semibold\">Destination</p>\n                                <p className=\"text-sm text-muted-foreground\">{endLocation?.address || \"Click map to select\"}</p>\n                            </div>\n                        </div>\n                    </CardContent>\n                </Card>\n\n                <Button onClick={handleAnalyzeRoute} disabled={isAnalyzing || !startLocation || !endLocation || !isMapLoaded} className=\"w-full text-lg py-6\">\n                    {isAnalyzing ? <><LoaderCircle className=\"mr-2 h-5 w-5 animate-spin\" />Analyzing...</> : \"Analyze Route\"}\n                </Button>\n            </div>\n          <div className=\"md:col-span-2 space-y-6\">\n            <Card className=\"h-[450px]\">\n              <MapComponent\n                incidents={mapPins}\n                onPinClick={() => {}}\n                onMapLoad={setIsMapLoaded}\n                onMapClick={handleMapClick}\n                center={mapCenter}\n                zoom={mapZoom}\n                routePolyline={routePolyline}\n              />\n            </Card>\n            \n            {alertSummary && (\n                <Card className=\"animate-in fade-in-50\">\n                    <CardHeader>\n                        <CardTitle className=\"flex items-center justify-between text-lg\">\n                            <div className='flex items-center gap-2'><Bot className=\"w-5 h-5 text-primary\" />AI Summary</div>\n                             {audioDataUri && (\n                                <Button variant=\"ghost\" size=\"icon\" onClick={playAudio}>\n                                    <Volume2 className=\"w-5 h-5\" />\n                                </Button>\n                            )}\n                        </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                        <p className=\"text-muted-foreground\">{alertSummary}</p>\n                    </CardContent>\n                </Card>\n            )}\n\n            {junctionCount !== null && (\n                 <Card className=\"animate-in fade-in-50\">\n                    <CardHeader>\n                         <CardTitle className=\"flex items-center gap-3 text-lg\">\n                             <GitCommitHorizontal className=\"w-5 h-5 text-primary\" />\n                             Route Analysis\n                         </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                         <p className=\"text-muted-foreground\">\n                            There are an estimated <span className='font-bold text-primary'>{junctionCount}</span> junctions and crossings on this route.\n                         </p>\n                    </CardContent>\n                 </Card>\n            )}\n\n            {nextIncidentInfo && (\n              <Card className=\"animate-in fade-in-50 border-primary\">\n                  <CardHeader>\n                      <CardTitle className=\"flex items-center gap-3 text-lg text-primary\">\n                          <AlertTriangle className=\"w-5 h-5\" />\n                          Next Incident Ahead\n                      </CardTitle>\n                      <CardDescription>\n                          The next reported issue on your route is approximately <span className='font-bold text-primary'>{nextIncidentInfo.distance}</span> away.\n                      </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                       <div className='flex justify-between items-start'>\n                          <div>\n                            <p className=\"font-semibold text-base\">{nextIncidentInfo.incident.category}</p>\n                            <p className=\"text-sm text-muted-foreground mt-1\">{nextIncidentInfo.incident.summary}</p>\n                          </div>\n                          <Badge variant=\"outline\">{nextIncidentInfo.incident.severity} Severity</Badge>\n                       </div>\n                  </CardContent>\n              </Card>\n            )}\n\n            {alertDetails.length > 0 && (\n                <div className='mt-4 space-y-3'>\n                    <h3 className='font-semibold'>All Incidents on Route ({alertDetails.length})</h3>\n                    {alertDetails.map(alert => (\n                         <Card key={alert.incidentId} className='bg-muted/50'>\n                            <CardContent className='pt-4'>\n                                 <div className='flex justify-between items-start'>\n                                    <p className=\"font-semibold text-base\">{alert.category}</p>\n                                    <Badge variant=\"outline\">{alert.severity} Severity</Badge>\n                                 </div>\n                                 <p className=\"text-sm text-muted-foreground mt-1\">{alert.summary}</p>\n                            </CardContent>\n                         </Card>\n                    ))}\n                </div>\n            )}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}