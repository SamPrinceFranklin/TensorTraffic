{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/live-incidents-service.ts"],"sourcesContent":["\n'use server';\n\nimport { formatDistanceToNow } from 'date-fns';\nimport { analyzeLiveIncidents, AnalyzeLiveIncidentsOutput } from '@/ai/flows/analyze-live-incidents-flow';\n\nexport interface LiveIncident {\n  id: string;\n  source: 'Web' | 'Social Media' | 'Official';\n  title: string;\n  summary: string;\n  url: string;\n  timestamp: string; // ISO string\n  timeAgo: string;\n  location: string;\n}\n\nexport interface AnalyzedIncidentReport {\n    analysis: AnalyzeLiveIncidentsOutput;\n    supportingIncidents: LiveIncident[];\n}\n\ninterface PerplexitySearchResult {\n    title: string;\n    url: string;\n    summary?: string;\n}\n\nasync function performPerplexitySearch(apiKey: string, prompt: string): Promise<PerplexitySearchResult[]> {\n    const url = \"https://api.perplexity.ai/chat/completions\";\n    const payload = {\n        model: \"sonar\",\n        messages: [{ \"role\": \"user\", \"content\": prompt }],\n    };\n    const headers = {\n        \"Authorization\": `Bearer ${apiKey}`,\n        \"Content-Type\": \"application/json\"\n    };\n\n    const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(payload),\n        headers: headers\n    });\n\n    const responseData = await response.json();\n\n    if (!response.ok) {\n        console.error(\"Perplexity API Error:\", responseData);\n        // Don't throw, just return empty so one search failing doesn't kill the whole feature\n        return []; \n    }\n\n    return responseData.search_results || [];\n}\n\n\nexport async function getLiveIncidents(location: {\n  lat: number;\n  lng: number;\n  address: string;\n}): Promise<{ success: boolean; data?: AnalyzedIncidentReport[], error?: string }> {\n  const apiKey = process.env.PERPLEXITY_API_KEY;\n\n  if (!apiKey) {\n    return { success: false, error: 'Perplexity API key is not configured. Please add PERPLEXITY_API_KEY to your .env file.' };\n  }\n  \n  const trafficPrompt = `Find real-time and upcoming civic incidents for the location \"${location.address}\". Search only for the last 2 days. Focus exclusively on events that disrupt public commute and daily activities. Consolidate multiple reports of the same event into a single summary.\n\nInclude only the following types of events:\n- Traffic alerts, accidents, and road changes\n- Road closures (temporary or long-term)\n- Public protests, demonstrations, or mass gatherings\n- Visits by politicians or VIPs causing traffic regulation changes\n- Natural calamities (e.g., water logging, flooding, tree fall)`;\n\n  const electricityPrompt = `Find official announcements or news about power cuts, electrical maintenance schedules, or major electrical faults from the local electricity board or utility provider for the area of \"${location.address}\". Search only for the last 48 hours.`;\n\n\n  try {\n    const [trafficResults, electricityResults] = await Promise.all([\n        performPerplexitySearch(apiKey, trafficPrompt),\n        performPerplexitySearch(apiKey, electricityPrompt)\n    ]);\n    \n    const allReports: AnalyzedIncidentReport[] = [];\n\n    // Analyze Traffic Incidents\n    const trafficIncidents: LiveIncident[] = trafficResults.map((item: PerplexitySearchResult, index: number) => ({\n        id: `traffic-${index}-${new Date().getTime()}`,\n        source: 'Web', title: item.title, summary: item.summary || 'Source: ' + new URL(item.url).hostname,\n        url: item.url, timestamp: new Date().toISOString(), timeAgo: 'Just now', location: location.address,\n    }));\n    const trafficAnalysis = await analyzeLiveIncidents(trafficIncidents);\n    allReports.push({ analysis: trafficAnalysis, supportingIncidents: trafficIncidents });\n\n    // Analyze Electricity Incidents\n    const electricityIncidents: LiveIncident[] = electricityResults.map((item: PerplexitySearchResult, index: number) => ({\n        id: `elec-${index}-${new Date().getTime()}`,\n        source: 'Web', title: item.title, summary: item.summary || 'Source: ' + new URL(item.url).hostname,\n        url: item.url, timestamp: new Date().toISOString(), timeAgo: 'Just now', location: location.address,\n    }));\n    const electricityAnalysis = await analyzeLiveIncidents(electricityIncidents);\n    allReports.push({ analysis: electricityAnalysis, supportingIncidents: electricityIncidents });\n\n    return { success: true, data: allReports };\n\n  } catch (error: any) {\n    console.error(\"Error fetching live incidents:\", error);\n    return { success: false, error: error.message || \"An unknown error occurred.\" };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAyDsB,mBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/custom-map-pin.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { LucideProps } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface CustomMapPinProps {\n  icon: React.ElementType<LucideProps>;\n  className?: string;\n}\n\nexport function CustomMapPin({ icon: Icon, className }: CustomMapPinProps) {\n  return (\n    <div\n      className={cn(\n        'w-8 h-8 rounded-full bg-background border-2 border-foreground flex items-center justify-center shadow-md',\n        className\n      )}\n    >\n      <Icon className={cn('w-5 h-5 text-foreground', className)} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAIA;AAJA;;;AAWO,SAAS,aAAa,EAAE,MAAM,IAAI,EAAE,SAAS,EAAqB;IACvE,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4GACA;kBAGF,cAAA,8OAAC;YAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2BAA2B;;;;;;;;;;;AAGrD","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/map.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useMemo, useEffect, useCallback, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, OverlayView, TrafficLayer, Polyline, HeatmapLayer } from '@react-google-maps/api';\nimport { CustomMapPin } from './custom-map-pin';\nimport { Droplets, Car, PowerOff, AlertTriangle, Construction, TreeDeciduous, TrafficCone, Home, School } from 'lucide-react';\nimport { Incident } from '@/lib/types';\n\nconst defaultContainerStyle = {\n  width: '100%',\n  height: '100%',\n  borderRadius: '0.5rem',\n};\n\nconst defaultCenter = {\n  lat: 37.7749,\n  lng: -122.4194,\n};\n\nconst getPixelPositionOffset = (width: number, height: number) => ({\n  x: -(width / 2),\n  y: -(height / 2),\n});\n\nconst categoryStyles: { [key: string]: { icon: React.ElementType; className: string } } = {\n    'Water Logging': { icon: Droplets, className: 'bg-blue-100 border-blue-500 text-blue-500' },\n    'Road Accidents': { icon: Car, className: 'bg-red-100 border-red-500 text-red-500' },\n    'Accident': { icon: Car, className: 'bg-red-100 border-red-500 text-red-500' },\n    'Fire Accidents': { icon: TrafficCone, className: 'bg-orange-100 border-orange-500 text-orange-500' },\n    'Electrical Issues': { icon: PowerOff, className: 'bg-yellow-100 border-yellow-500 text-yellow-500' },\n    'PowerCut': { icon: PowerOff, className: 'bg-yellow-100 border-yellow-500 text-yellow-500' },\n    'Drainage/Fallen Tree': { icon: TreeDeciduous, className: 'bg-green-100 border-green-500 text-green-500' },\n    'Road Blockages': { icon: TrafficCone, className: 'bg-gray-100 border-gray-500 text-gray-500' },\n    'Construction Zones': { icon: Construction, className: 'bg-indigo-100 border-indigo-500 text-indigo-500' },\n    'Home': { icon: Home, className: 'bg-green-100 border-green-500 text-green-500' },\n    'School': { icon: School, className: 'bg-blue-100 border-blue-500 text-blue-500' },\n    'Other': { icon: AlertTriangle, className: 'bg-purple-100 border-purple-500 text-purple-500' },\n};\n\ninterface MapComponentProps {\n  incidents: Incident[];\n  onPinClick: (incident: Incident) => void;\n  onMapClick?: (e: google.maps.MapMouseEvent) => void;\n  onMapLoad?: (isLoaded: boolean) => void;\n  center?: { lat: number; lng: number };\n  zoom?: number;\n  containerStyle?: React.CSSProperties;\n  showTraffic?: boolean;\n  routePolyline?: string;\n  aqiHeatmap?: boolean;\n  incidentHeatmap?: boolean;\n}\n\nexport function MapComponent({ \n  incidents,\n  onPinClick,\n  onMapClick,\n  onMapLoad,\n  center = defaultCenter,\n  zoom = 12,\n  containerStyle = defaultContainerStyle,\n  showTraffic = false,\n  routePolyline,\n  aqiHeatmap = false,\n  incidentHeatmap = false,\n}: MapComponentProps) {\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\n  const [mapInstance, setMapInstance] = useState<google.maps.Map | null>(null);\n\n  const { isLoaded, loadError } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: apiKey || '',\n    libraries: ['places', 'routes', 'geometry', 'geocoding', 'visualization'],\n  });\n\n  const handleMapLoad = useCallback((map: google.maps.Map) => {\n    setMapInstance(map);\n    if (onMapLoad) {\n      onMapLoad(true);\n    }\n  }, [onMapLoad]);\n  \n  useEffect(() => {\n    if(onMapLoad) onMapLoad(isLoaded);\n  }, [isLoaded, onMapLoad]);\n  \n  const decodedPath = useMemo(() => {\n    if (isLoaded && routePolyline && window.google?.maps?.geometry?.encoding) {\n        return window.google.maps.geometry.encoding.decodePath(routePolyline);\n    }\n    return [];\n  }, [isLoaded, routePolyline]);\n\n  const incidentHeatmapData = useMemo(() => {\n      if(!isLoaded || !window.google?.maps?.visualization) return [];\n      return incidents.map(incident => new google.maps.LatLng(incident.location.latitude, incident.location.longitude));\n  }, [incidents, isLoaded]);\n\n  useEffect(() => {\n    if (mapInstance && isLoaded) {\n      mapInstance.overlayMapTypes.clear();\n\n      if (aqiHeatmap) {\n        const aqiTileLayer = new google.maps.ImageMapType({\n          getTileUrl: function(coord, zoom) {\n            const url = `https://airquality.googleapis.com/v1/mapTypes/UAQI_RED_GREEN/heatmapTiles/${zoom}/${coord.x}/${coord.y}?key=${apiKey}`;\n            return url;\n          },\n          tileSize: new google.maps.Size(256, 256),\n          name: 'AQI Heatmap'\n        });\n        mapInstance.overlayMapTypes.insertAt(0, aqiTileLayer);\n      }\n    }\n    return () => {\n      if (mapInstance) {\n        mapInstance.overlayMapTypes.clear();\n      }\n    };\n  }, [mapInstance, isLoaded, aqiHeatmap, apiKey]);\n\n\n  if (loadError) {\n    return (\n      <div className=\"flex items-center justify-center h-full bg-muted rounded-lg\">\n        <p className=\"text-destructive\">\n          Error loading maps.\n        </p>\n      </div>\n    );\n  }\n\n  if (!isLoaded) {\n    return (\n       <div className=\"flex items-center justify-center h-full bg-muted rounded-lg\">\n        <p>Loading Map...</p>\n      </div>\n    );\n  }\n\n  if (!apiKey) {\n    return (\n      <div className=\"flex items-center justify-center h-full bg-muted rounded-lg\">\n        <p className=\"text-destructive\">\n          Google Maps API key is missing. Please add it to your .env file.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={zoom} onClick={onMapClick} onLoad={handleMapLoad}>\n      {incidents.map(incident => {\n          const style = categoryStyles[incident.category] || categoryStyles['Other'];\n          if (!style) return null;\n          return (\n            <OverlayView\n              key={incident.id}\n              position={{ lat: incident.location.latitude, lng: incident.location.longitude }}\n              mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\n              getPixelPositionOffset={getPixelPositionOffset}\n            >\n              <div onClick={() => onPinClick(incident)} style={{cursor: 'pointer'}}>\n                <CustomMapPin icon={style.icon} className={style.className} />\n              </div>\n            </OverlayView>\n          )\n      })}\n      {showTraffic && <TrafficLayer autoUpdate />}\n      {decodedPath.length > 0 && (\n        <Polyline\n            path={decodedPath}\n            options={{\n                strokeColor: '#FF0000',\n                strokeOpacity: 0.8,\n                strokeWeight: 4,\n            }}\n        />\n      )}\n      {incidentHeatmap && incidentHeatmapData.length > 0 && (\n          <HeatmapLayer\n            data={incidentHeatmapData}\n            options={{\n                radius: 20,\n                opacity: 0.6\n            }}\n          />\n      )}\n    </GoogleMap>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/accordion.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,YAAY,qKAAA,CAAA,OAAuB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG;AAE5B,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,qKAAA,CAAA,SAAyB;QAAC,WAAU;kBACnC,cAAA,8OAAC,qKAAA,CAAA,UAA0B;YACzB,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gIACA;YAED,GAAG,KAAK;;gBAER;8BACD,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI7B,iBAAiB,WAAW,GAAG,qKAAA,CAAA,UAA0B,CAAC,WAAW;AAErE,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,qKAAA,CAAA,UAA0B;QACzB,KAAK;QACL,WAAU;QACT,GAAG,KAAK;kBAET,cAAA,8OAAC;YAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;sBAAa;;;;;;;;;;;AAIjD,iBAAiB,WAAW,GAAG,qKAAA,CAAA,UAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLSpanElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <span className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n\n    "],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAEzE","debugId":null}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/live-agent/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { useToast } from '@/hooks/use-toast';\nimport { Bot, LoaderCircle, MapPin, Search, Link as LinkIcon, AlertTriangle, Wand2, BookText, ShieldAlert, ShieldCheck, Shield } from 'lucide-react';\nimport { getLiveIncidents, AnalyzedIncidentReport, LiveIncident } from '@/lib/live-incidents-service';\nimport { MapComponent } from '@/components/map';\nimport { Incident } from '@/lib/types';\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';\nimport { Badge } from '@/components/ui/badge';\n\n\ntype LocationState = {\n  lat: number;\n  lng: number;\n  address: string;\n} | null;\n\nconst ImpactCard = ({ report, address }: { report: AnalyzedIncidentReport, address: string }) => {\n    const impactStyles = {\n        High: {\n            icon: AlertTriangle,\n            cardClass: 'border-destructive bg-red-50',\n            textClass: 'text-destructive',\n            badgeClass: 'bg-destructive hover:bg-destructive/80',\n        },\n        Moderate: {\n            icon: ShieldAlert,\n            cardClass: 'border-yellow-500 bg-yellow-50',\n            textClass: 'text-yellow-600',\n            badgeClass: 'bg-yellow-500 hover:bg-yellow-500/80',\n        },\n        Low: {\n            icon: ShieldCheck,\n            cardClass: 'border-green-500 bg-green-50',\n            textClass: 'text-green-600',\n            badgeClass: 'bg-green-500 hover:bg-green-500/80',\n        }\n    };\n\n    const style = impactStyles[report.analysis.impactLevel] || impactStyles.Low;\n    const Icon = style.icon;\n\n    // Don't render a card if the analysis says no incidents were found.\n    if (report.analysis.incidentCategory === 'No Incidents Found' || report.analysis.incidentCategory === 'No Incidents') {\n        return null;\n    }\n\n    return (\n       <Card className={`shadow-md hover:shadow-lg transition-shadow ${style.cardClass}`}>\n            <CardHeader>\n                <div className='flex justify-between items-start'>\n                    <CardTitle className={`font-headline text-xl flex items-center gap-3 ${style.textClass}`}>\n                        <Icon className=\"w-6 h-6\" />\n                        {report.analysis.incidentCategory}\n                    </CardTitle>\n                    <Badge className={style.badgeClass}>{report.analysis.impactLevel} Impact</Badge>\n                </div>\n                <CardDescription>\n                    AI-generated analysis of live events in {address}.\n                </CardDescription>\n            </CardHeader>\n             <CardContent>\n                <p className=\"text-muted-foreground pb-4 border-b\">\n                    {report.analysis.analysisSummary}\n                </p>\n                {report.supportingIncidents.length > 0 && (\n                <Accordion type=\"single\" collapsible className=\"w-full\">\n                    <AccordionItem value=\"item-1\">\n                        <AccordionTrigger>\n                            <div className=\"flex items-center gap-2\">\n                                <BookText className='w-4 h-4' />\n                                <span>\n                                    View {report.supportingIncidents.length} Supporting Source{report.supportingIncidents.length > 1 ? 's' : ''}\n                                </span>\n                            </div>\n                        </AccordionTrigger>\n                        <AccordionContent className=\"pt-2 space-y-3\">\n                            {report.supportingIncidents.map((incident) => (\n                                <Card key={incident.id} className=\"bg-background/50\">\n                                    <CardHeader className=\"pb-2 pt-4\">\n                                        <CardTitle className=\"text-base flex items-center gap-3\">\n                                            {incident.title}\n                                        </CardTitle>\n                                        <CardDescription>{incident.timeAgo} &bull; {incident.location}</CardDescription>\n                                    </CardHeader>\n                                    <CardContent>\n                                        <p className=\"text-sm text-muted-foreground\">{incident.summary}</p>\n                                        <Button variant=\"link\" asChild className=\"p-0 h-auto mt-2 text-xs\">\n                                            <a href={incident.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                View Source <LinkIcon className=\"w-3 h-3 ml-1\" />\n                                            </a>\n                                        </Button>\n                                    </CardContent>\n                                </Card>\n                            ))}\n                        </AccordionContent>\n                    </AccordionItem>\n                </Accordion>\n                )}\n            </CardContent>\n        </Card>\n    );\n};\n\n\nexport default function LiveAgentPage() {\n  const [location, setLocation] = useState<LocationState>(null);\n  const [analyzedReports, setAnalyzedReports] = useState<AnalyzedIncidentReport[]>([]);\n  const [isFetchingIncidents, setIsFetchingIncidents] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [apiKeyMissing, setApiKeyMissing] = useState(false);\n  \n  const { toast } = useToast();\n\n  const handleSearch = async () => {\n    if (!searchQuery) {\n        toast({variant: 'destructive', title: 'Please enter a location to search.'});\n        return;\n    }\n    if (!isMapLoaded || typeof google === 'undefined') {\n        toast({variant: 'destructive', title: 'Map service is not available.'});\n        return;\n    }\n    \n    setIsFetchingIncidents(true);\n    setAnalyzedReports([]);\n    \n    const geocoder = new google.maps.Geocoder();\n    geocoder.geocode({ address: searchQuery }, async (results, status) => {\n        if (status === 'OK' && results && results[0]) {\n            const newLocationData = results[0].geometry.location;\n            const newLocation = {\n                lat: newLocationData.lat(),\n                lng: newLocationData.lng(),\n                address: results[0].formatted_address\n            };\n            setLocation(newLocation);\n            setSearchQuery(newLocation.address);\n            \n            const result = await getLiveIncidents(newLocation);\n            if (result.success && result.data) {\n                setAnalyzedReports(result.data);\n                setApiKeyMissing(false);\n            } else {\n                if (result.error?.includes('API key')) {\n                    setApiKeyMissing(true);\n                }\n                toast({ variant: 'destructive', title: 'Failed to fetch live incidents.', description: result.error });\n            }\n        } else {\n            toast({variant: 'destructive', title: 'Could not find location.', description: `Geocoder failed due to: ${status}`});\n        }\n        setIsFetchingIncidents(false);\n    });\n  }\n  \n  const mapPins = useMemo(() => {\n    if (!location) return [];\n    return [{\n        id: 'search-location',\n        location: { latitude: location.lat, longitude: location.lng },\n        category: 'Home',\n        severity: 'Low',\n        summary: location.address,\n        timestamp: new Date().toISOString()\n    }] as Incident[];\n  }, [location]);\n\n  const hasContentToShow = analyzedReports.some(\n    report => report.analysis.incidentCategory !== 'No Incidents Found' && report.analysis.incidentCategory !== 'No Incidents'\n  );\n\n  return (\n    <div className=\"bg-background min-h-screen\">\n      <main className=\"container mx-auto px-4 py-8 md:py-16\">\n        <header className=\"text-center mb-8\">\n          <h1 className=\"text-4xl sm:text-5xl font-bold font-headline text-primary flex items-center justify-center gap-3\">\n            <Bot className=\"w-12 h-12\" /> Live Agent\n          </h1>\n          <p className=\"mt-4 text-lg text-muted-foreground\">\n            Enter a location to get real-time, AI-analyzed incident updates from across the web.\n          </p>\n        </header>\n\n        <div className=\"max-w-4xl mx-auto mb-8 grid grid-cols-1 md:grid-cols-2 gap-8\">\n            <div className=\"space-y-4\">\n                <Card>\n                    <CardContent className='p-4'>\n                        <div className=\"flex items-center gap-3\">\n                            <MapPin className=\"w-5 h-5 text-primary\" />\n                             <Input\n                                placeholder=\"Search for a city, address, or region...\"\n                                value={searchQuery}\n                                onChange={(e) => setSearchQuery(e.target.value)}\n                                className=\"pr-10\"\n                                disabled={!isMapLoaded}\n                                onKeyDown={(e) => { if (e.key === 'Enter') handleSearch() }}\n                            />\n                            <Button onClick={handleSearch} disabled={!isMapLoaded || isFetchingIncidents}>\n                                <Search className=\"w-4 h-4\"/>\n                            </Button>\n                        </div>\n                    </CardContent>\n                </Card>\n                 <div className=\"space-y-6 max-h-[500px] overflow-y-auto pr-2\">\n                    {isFetchingIncidents ? (\n                    <div className=\"flex justify-center items-center gap-2 text-muted-foreground text-lg py-16\">\n                        <LoaderCircle className=\"w-6 h-6 animate-spin\" />\n                        <p>{\"Searching and analyzing incidents...\"}</p>\n                    </div>\n                    ) : apiKeyMissing ? (\n                         <Card className=\"border-destructive\">\n                            <CardHeader className='flex-row items-center gap-4 space-y-0'>\n                                <AlertTriangle className=\"w-8 h-8 text-destructive\" />\n                                <div>\n                                    <CardTitle>API Key Missing</CardTitle>\n                                    <CardDescription>\n                                        The Perplexity API key is not configured. Please add it to your .env file.\n                                    </CardDescription>\n                                </div>\n                            </CardHeader>\n                        </Card>\n                    ) : analyzedReports.length > 0 && location ? (\n                        hasContentToShow ? (\n                            analyzedReports.map((report, index) => (\n                                <ImpactCard key={index} report={report} address={location.address} />\n                            ))\n                        ) : (\n                            <Card>\n                                <CardContent className=\"p-8 text-center\">\n                                    <p className=\"text-muted-foreground\">No significant live incidents found for this area.</p>\n                                </CardContent>\n                            </Card>\n                        )\n                    ) : (\n                    <Card>\n                        <CardContent className=\"p-8 text-center\">\n                            <p className=\"text-muted-foreground\">Enter a location and click search to begin.</p>\n                        </CardContent>\n                    </Card>\n                    )}\n                </div>\n            </div>\n            <div className=\"h-[400px] md:h-[600px] rounded-lg overflow-hidden\">\n                <MapComponent\n                    incidents={mapPins}\n                    onPinClick={() => {}}\n                    onMapLoad={setIsMapLoaded}\n                    center={location ? { lat: location.lat, lng: location.lng } : { lat: 37.7749, lng: -122.4194 }}\n                    zoom={location ? 11 : 9}\n                />\n            </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}