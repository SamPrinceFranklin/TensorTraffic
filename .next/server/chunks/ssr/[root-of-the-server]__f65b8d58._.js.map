{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\n// A single configuration for Firebase services for the client\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// A server-specific configuration, ensuring we use the correct credentials on the server\nconst firebaseServerConfig = {\n    apiKey: process.env.FIREBASE_API_KEY,\n    authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.FIREBASE_PROJECT_ID,\n    storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.FIREBASE_APP_ID,\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(typeof window === 'undefined' ? firebaseServerConfig : firebaseConfig) : getApp();\nconst db = getFirestore(app);\n\nexport { db };\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;AACvD;AAAA;AACA;AAAA;;;AAEA,8DAA8D;AAC9D,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,yFAAyF;AACzF,MAAM,uBAAuB;IACzB,QAAQ,QAAQ,GAAG,CAAC,gBAAgB;IACpC,YAAY,QAAQ,GAAG,CAAC,oBAAoB;IAC5C,WAAW,QAAQ,GAAG,CAAC,mBAAmB;IAC1C,eAAe,QAAQ,GAAG,CAAC,uBAAuB;IAClD,mBAAmB,QAAQ,GAAG,CAAC,4BAA4B;IAC3D,OAAO,QAAQ,GAAG,CAAC,eAAe;AACtC;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,uCAAgC,+DAAyC,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AAC5H,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/incidents-service.ts"],"sourcesContent":["'use server';\n\nimport { db } from '@/lib/firebase';\nimport { collection, addDoc, getDocs, serverTimestamp, Timestamp, doc, updateDoc, increment, getDoc, query, orderBy } from \"firebase/firestore\";\nimport { Incident, Comment } from '@/lib/types';\n\nexport interface IncidentData {\n    location: {\n        latitude: number;\n        longitude: number;\n    };\n    category: string;\n    severity: string;\n    summary: string;\n    address?: string;\n}\n\nexport async function saveIncidentReport(incidentData: IncidentData) {\n    try {\n        const docRef = await addDoc(collection(db, \"incidents\"), {\n            location: incidentData.location,\n            category: incidentData.category,\n            severity: incidentData.severity,\n            summary: incidentData.summary,\n            address: incidentData.address || null,\n            upvotes: 0,\n            timestamp: serverTimestamp(),\n        });\n        console.log(\"Document written with ID: \", docRef.id);\n        return { success: true, id: docRef.id };\n    } catch (e) {\n        console.error(\"Error adding document: \", e);\n        if (e instanceof Error) {\n            if (e.message.includes('PERMISSION_DENIED')) {\n                 return { success: false, error: 'Permission Denied. Please check your Firestore security rules in the Firebase Console. This is a common issue and is required for the app to save data.' };\n            }\n            return { success: false, error: e.message };\n        }\n        return { success: false, error: 'An unknown error occurred while saving the incident report.' };\n    }\n}\n\nexport async function getIncidents() {\n  try {\n    const querySnapshot = await getDocs(collection(db, 'incidents'));\n    const incidents: Incident[] = querySnapshot.docs.map(doc => {\n      const data = doc.data();\n      const timestamp = data.timestamp as Timestamp;\n      \n      return {\n        id: doc.id,\n        location: {\n          latitude: data.location.latitude,\n          longitude: data.location.longitude,\n        },\n        category: data.category,\n        severity: data.severity,\n        summary: data.summary,\n        timestamp: timestamp.toDate().toISOString(),\n        address: data.address || undefined,\n        upvotes: data.upvotes || 0,\n      };\n    });\n    return { success: true, data: incidents };\n  } catch (e) {\n    console.error(\"Error getting documents: \", e);\n    if (e instanceof Error) {\n      if (e.message.includes('PERMISSION_DENIED')) {\n        return { success: false, error: 'Permission Denied. Could not retrieve incidents. Please check your Firestore security rules.' };\n      }\n      return { success: false, error: e.message };\n    }\n    return { success: false, error: 'An unknown error occurred while fetching incidents.' };\n  }\n}\n\nexport async function upvoteIncident(incidentId: string) {\n    try {\n        const incidentRef = doc(db, 'incidents', incidentId);\n        await updateDoc(incidentRef, {\n            upvotes: increment(1)\n        });\n        const updatedDoc = await getDoc(incidentRef);\n        if(updatedDoc.exists()){\n            return { success: true, newUpvotes: updatedDoc.data().upvotes };\n        }\n        return { success: false, error: 'Could not retrieve updated upvote count.' };\n    } catch (e: any) {\n        console.error(\"Error upvoting incident: \", e);\n        if (e.message.includes('PERMISSION_DENIED')) {\n            return { success: false, error: 'Permission Denied. Please check your Firestore security rules to allow incident updates.' };\n        }\n        return { success: false, error: e.message || 'An unknown error occurred while upvoting.' };\n    }\n}\n\nexport async function addComment(incidentId: string, commentText: string) {\n    try {\n        const commentsCollectionRef = collection(db, 'incidents', incidentId, 'comments');\n        const docRef = await addDoc(commentsCollectionRef, {\n            text: commentText,\n            author: 'Anonymous', // In a real app, this would be the logged-in user's ID/name\n            timestamp: serverTimestamp(),\n        });\n        return { success: true, id: docRef.id };\n    } catch (e: any) {\n        console.error(\"Error adding comment: \", e);\n         if (e.message.includes('PERMISSION_DENIED')) {\n            return { success: false, error: 'Permission Denied. Please check your Firestore security rules to allow writing to the comments sub-collection.' };\n        }\n        return { success: false, error: e.message || 'An unknown error occurred while adding the comment.' };\n    }\n}\n\nexport async function getComments(incidentId: string): Promise<{ success: boolean; data?: Comment[], error?: string }> {\n    try {\n        const commentsCollectionRef = collection(db, 'incidents', incidentId, 'comments');\n        const q = query(commentsCollectionRef, orderBy('timestamp', 'desc'));\n        const querySnapshot = await getDocs(q);\n        const comments: Comment[] = querySnapshot.docs.map(doc => {\n            const data = doc.data();\n            const timestamp = data.timestamp as Timestamp;\n            return {\n                id: doc.id,\n                text: data.text,\n                author: data.author,\n                timestamp: timestamp ? timestamp.toDate().toISOString() : new Date().toISOString(),\n            };\n        });\n        return { success: true, data: comments };\n    } catch (e: any) {\n        console.error(\"Error fetching comments: \", e);\n         if (e.message.includes('PERMISSION_DENIED')) {\n            return { success: false, error: 'Permission Denied. Please check your Firestore security rules to allow reading from the comments sub-collection.' };\n        }\n        return { success: false, error: e.message || 'An unknown error occurred while fetching comments.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AAAA;;;;;;AAcO,eAAe,mBAAmB,YAA0B;IAC/D,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,cAAc;YACrD,UAAU,aAAa,QAAQ;YAC/B,UAAU,aAAa,QAAQ;YAC/B,UAAU,aAAa,QAAQ;YAC/B,SAAS,aAAa,OAAO;YAC7B,SAAS,aAAa,OAAO,IAAI;YACjC,SAAS;YACT,WAAW,CAAA,GAAA,iKAAA,CAAA,kBAAe,AAAD;QAC7B;QACA,QAAQ,GAAG,CAAC,8BAA8B,OAAO,EAAE;QACnD,OAAO;YAAE,SAAS;YAAM,IAAI,OAAO,EAAE;QAAC;IAC1C,EAAE,OAAO,GAAG;QACR,QAAQ,KAAK,CAAC,2BAA2B;QACzC,IAAI,aAAa,OAAO;YACpB,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,sBAAsB;gBACxC,OAAO;oBAAE,SAAS;oBAAO,OAAO;gBAA0J;YAC/L;YACA,OAAO;gBAAE,SAAS;gBAAO,OAAO,EAAE,OAAO;YAAC;QAC9C;QACA,OAAO;YAAE,SAAS;YAAO,OAAO;QAA8D;IAClG;AACJ;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,gBAAgB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE;QACnD,MAAM,YAAwB,cAAc,IAAI,CAAC,GAAG,CAAC,CAAA;YACnD,MAAM,OAAO,IAAI,IAAI;YACrB,MAAM,YAAY,KAAK,SAAS;YAEhC,OAAO;gBACL,IAAI,IAAI,EAAE;gBACV,UAAU;oBACR,UAAU,KAAK,QAAQ,CAAC,QAAQ;oBAChC,WAAW,KAAK,QAAQ,CAAC,SAAS;gBACpC;gBACA,UAAU,KAAK,QAAQ;gBACvB,UAAU,KAAK,QAAQ;gBACvB,SAAS,KAAK,OAAO;gBACrB,WAAW,UAAU,MAAM,GAAG,WAAW;gBACzC,SAAS,KAAK,OAAO,IAAI;gBACzB,SAAS,KAAK,OAAO,IAAI;YAC3B;QACF;QACA,OAAO;YAAE,SAAS;YAAM,MAAM;QAAU;IAC1C,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,IAAI,aAAa,OAAO;YACtB,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,sBAAsB;gBAC3C,OAAO;oBAAE,SAAS;oBAAO,OAAO;gBAA+F;YACjI;YACA,OAAO;gBAAE,SAAS;gBAAO,OAAO,EAAE,OAAO;YAAC;QAC5C;QACA,OAAO;YAAE,SAAS;YAAO,OAAO;QAAsD;IACxF;AACF;AAEO,eAAe,eAAe,UAAkB;IACnD,IAAI;QACA,MAAM,cAAc,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,aAAa;QACzC,MAAM,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE,aAAa;YACzB,SAAS,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE;QACvB;QACA,MAAM,aAAa,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE;QAChC,IAAG,WAAW,MAAM,IAAG;YACnB,OAAO;gBAAE,SAAS;gBAAM,YAAY,WAAW,IAAI,GAAG,OAAO;YAAC;QAClE;QACA,OAAO;YAAE,SAAS;YAAO,OAAO;QAA2C;IAC/E,EAAE,OAAO,GAAQ;QACb,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,sBAAsB;YACzC,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAA2F;QAC/H;QACA,OAAO;YAAE,SAAS;YAAO,OAAO,EAAE,OAAO,IAAI;QAA4C;IAC7F;AACJ;AAEO,eAAe,WAAW,UAAkB,EAAE,WAAmB;IACpE,IAAI;QACA,MAAM,wBAAwB,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,aAAa,YAAY;QACtE,MAAM,SAAS,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,uBAAuB;YAC/C,MAAM;YACN,QAAQ;YACR,WAAW,CAAA,GAAA,iKAAA,CAAA,kBAAe,AAAD;QAC7B;QACA,OAAO;YAAE,SAAS;YAAM,IAAI,OAAO,EAAE;QAAC;IAC1C,EAAE,OAAO,GAAQ;QACb,QAAQ,KAAK,CAAC,0BAA0B;QACvC,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,sBAAsB;YAC1C,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAAiH;QACrJ;QACA,OAAO;YAAE,SAAS;YAAO,OAAO,EAAE,OAAO,IAAI;QAAsD;IACvG;AACJ;AAEO,eAAe,YAAY,UAAkB;IAChD,IAAI;QACA,MAAM,wBAAwB,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,aAAa,YAAY;QACtE,MAAM,IAAI,CAAA,GAAA,iKAAA,CAAA,QAAK,AAAD,EAAE,uBAAuB,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE,aAAa;QAC5D,MAAM,gBAAgB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE;QACpC,MAAM,WAAsB,cAAc,IAAI,CAAC,GAAG,CAAC,CAAA;YAC/C,MAAM,OAAO,IAAI,IAAI;YACrB,MAAM,YAAY,KAAK,SAAS;YAChC,OAAO;gBACH,IAAI,IAAI,EAAE;gBACV,MAAM,KAAK,IAAI;gBACf,QAAQ,KAAK,MAAM;gBACnB,WAAW,YAAY,UAAU,MAAM,GAAG,WAAW,KAAK,IAAI,OAAO,WAAW;YACpF;QACJ;QACA,OAAO;YAAE,SAAS;YAAM,MAAM;QAAS;IAC3C,EAAE,OAAO,GAAQ;QACb,QAAQ,KAAK,CAAC,6BAA6B;QAC1C,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,sBAAsB;YAC1C,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAAmH;QACvJ;QACA,OAAO;YAAE,SAAS;YAAO,OAAO,EAAE,OAAO,IAAI;QAAqD;IACtG;AACJ;;;IAxHsB;IAyBA;IAkCA;IAoBA;IAkBA;;AAjGA,+OAAA;AAyBA,+OAAA;AAkCA,+OAAA;AAoBA,+OAAA;AAkBA,+OAAA","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 472, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/summarize-trends-flow.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview A flow to analyze a list of incidents and identify trends.\n *\n * - summarizeTrends - A function that handles the trend analysis process.\n * - SummarizeTrendsInput - The input type for the summarizeTrends function.\n * - SummarizeTrendsOutput - The return type for the summarizeTrends function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport { Incident } from '@/lib/types';\n\nconst IncidentSchema = z.object({\n  id: z.string(),\n  location: z.object({\n    latitude: z.number(),\n    longitude: z.number(),\n  }),\n  category: z.string(),\n  severity: z.string(),\n  summary: z.string(),\n  timestamp: z.string(),\n  address: z.string().optional(),\n  upvotes: z.number().optional(),\n});\n\nconst SummarizeTrendsInputSchema = z.object({\n    incidents: z.array(IncidentSchema).describe('A list of all incidents to analyze for trends.'),\n});\nexport type SummarizeTrendsInput = z.infer<typeof SummarizeTrendsInputSchema>;\n\nconst SummarizeTrendsOutputSchema = z.object({\n  trendSummary: z.string().describe('A 2-3 sentence summary of the most important trends found in the data.'),\n  keyObservations: z.array(z.string()).describe('A list of 3-5 bullet points highlighting key observations, such as incident hotspots, recurring issues, or changes over time.'),\n});\nexport type SummarizeTrendsOutput = z.infer<typeof SummarizeTrendsOutputSchema>;\n\nexport async function summarizeTrends(input: SummarizeTrendsInput): Promise<SummarizeTrendsOutput> {\n  return summarizeTrendsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'summarizeTrendsPrompt',\n  input: { schema: SummarizeTrendsInputSchema },\n  output: { schema: SummarizeTrendsOutputSchema },\n  prompt: `You are a public safety data analyst. Your task is to analyze a dataset of incident reports and provide a high-level summary of trends and key observations. The dataset contains incidents with categories, severities, locations, and timestamps.\n\n**Analysis Tasks:**\n\n1.  **Identify Hotspots:** Look for concentrations of incidents. Are there specific addresses or areas where incidents frequently occur?\n2.  **Analyze by Category:** What are the most common types of incidents? Are there any unusual patterns?\n3.  **Analyze by Time:** Are there specific days of the week or times of day when incidents are more common? (Note: The timestamp is an ISO string).\n4.  **Synthesize Findings:** Based on your analysis, generate a concise trend summary and a list of key observations.\n\n**Example Output:**\n-   **Trend Summary:** \"Analysis of recent incident data reveals a significant concentration of road accidents along Main Street, particularly during evening rush hour. We've also noted a recurring pattern of electrical issues in the downtown district, suggesting a potential infrastructure problem.\"\n-   **Key Observations:**\n    *   \"Over 50% of all reported accidents occurred on Main Street.\"\n    *   \"Water logging incidents are most common on weekends, likely due to stadium traffic.\"\n    *   \"The neighborhood of Oak Park has a high density of 'Fallen Tree' reports, indicating a need for city maintenance.\"\n\n**Data to Analyze:**\nTotal Incidents: {{incidents.length}}\n\n{{#each incidents}}\n- Category: {{category}}\n  - Severity: {{severity}}\n  - Timestamp: {{timestamp}}\n  {{#if address}}\n  - Address: {{address}}\n  {{/if}}\n{{/each}}\n\nProvide your analysis in the requested structured format. Do not include markdown formatting in your response.\n`,\n});\n\nconst summarizeTrendsFlow = ai.defineFlow(\n  {\n    name: 'summarizeTrendsFlow',\n    inputSchema: SummarizeTrendsInputSchema,\n    outputSchema: SummarizeTrendsOutputSchema,\n  },\n  async (input) => {\n    if (input.incidents.length < 5) {\n        return {\n            trendSummary: \"Not enough data to perform a meaningful trend analysis. More incidents need to be reported to identify patterns.\",\n            keyObservations: [\"At least 5 incidents are required for trend analysis.\"],\n        }\n    }\n    const { output } = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAGA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAGA,MAAM,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9B,IAAI,uIAAA,CAAA,IAAC,CAAC,MAAM;IACZ,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACjB,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;QAClB,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM;IACrB;IACA,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;IAClB,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;IAClB,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM;IACjB,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC5B,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;AAC9B;AAEA,MAAM,6BAA6B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,WAAW,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,gBAAgB,QAAQ,CAAC;AAChD;AAGA,MAAM,8BAA8B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAClC,iBAAiB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AAChD;AAGO,eAAe,gBAAgB,KAA2B;IAC/D,OAAO,oBAAoB;AAC7B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAE,QAAQ;IAA2B;IAC5C,QAAQ;QAAE,QAAQ;IAA4B;IAC9C,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BX,CAAC;AACD;AAEA,MAAM,sBAAsB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACvC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAO;IACL,IAAI,MAAM,SAAS,CAAC,MAAM,GAAG,GAAG;QAC5B,OAAO;YACH,cAAc;YACd,iBAAiB;gBAAC;aAAwD;QAC9E;IACJ;IACA,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,OAAO;IAChC,OAAO;AACT;;;IAvDoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/analytics/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getIncidents as '0036f4f9175b9166298ecf81f230471c932f9b8d35'} from 'ACTIONS_MODULE0'\nexport {summarizeTrends as '40a715ffbb3029c51286a51df46a05a31b2e314cef'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 638, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/analytics/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/analytics/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/analytics/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8R,GAC3T,4DACA","debugId":null}},
    {"offset": {"line": 652, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/analytics/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/analytics/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/analytics/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0Q,GACvS,wCACA","debugId":null}},
    {"offset": {"line": 666, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}